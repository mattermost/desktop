{
  "stats": {
    "suites": 47,
    "tests": 95,
    "passes": 92,
    "pending": 2,
    "failures": 1,
    "start": "2022-08-08T19:38:47.822Z",
    "end": "2022-08-08T20:02:50.633Z",
    "duration": 1442811,
    "testsRegistered": 95,
    "passPercent": 98.9247311827957,
    "pendingPercent": 2.1052631578947367,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "68e96a3f-d342-4303-aac1-83ca5c1da6b3",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7901603b-113a-40c4-9b36-54f89051812f",
          "title": "application",
          "fullFile": "G:\\Workspace\\mattermost\\desktop\\dist\\tests\\e2e_bundle.js",
          "file": "\\dist\\tests\\e2e_bundle.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"application\"",
              "fullTitle": "application \"before each\" hook in \"application\"",
              "timedOut": false,
              "duration": 1068,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "env.cleanDataDir();env.createTestUserDataDir();env.cleanTestConfig();fs.writeFileSync(env.configFilePath,JSON.stringify(config));await asyncSleep(1000);",
              "err": {},
              "uuid": "06fbc1aa-6747-41e5-bab5-1d566ee1576f",
              "parentUUID": "7901603b-113a-40c4-9b36-54f89051812f",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"application\"",
              "fullTitle": "application \"after each\" hook in \"application\"",
              "timedOut": false,
              "duration": 7877,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if(this.app){try{await this.app.close();// eslint-disable-next-line no-empty\n}catch(err){}}await env.clearElectronInstances();",
              "err": {},
              "uuid": "007c7a45-2e30-4040-a05b-3dc231be40c1",
              "parentUUID": "7901603b-113a-40c4-9b36-54f89051812f",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "MM-T1304/MM-T1306 should open the app on the requested deep link",
              "fullTitle": "application MM-T1304/MM-T1306 should open the app on the requested deep link",
              "timedOut": false,
              "duration": 3252,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.app=await env.getApp(['mattermost://github.com/test/url']);this.serverMap=await env.getServerMap(this.app);const mainWindow=this.app.windows().find(window=>window.url().includes('index'));const browserWindow=await this.app.browserWindow(mainWindow);const webContentsId=this.serverMap[`${config.teams[1].name}___TAB_MESSAGING`].webContentsId;const isActive=await browserWindow.evaluate((window,id)=>{return window.getBrowserViews().find(view=>view.webContents.id===id).webContents.getURL();},webContentsId);isActive.should.equal('https://github.com/test/url');const dropdownButtonText=await mainWindow.innerText('.TeamDropdownButton');dropdownButtonText.should.equal('github');await this.app.close();",
              "err": {},
              "uuid": "5b220e2e-f464-4a6c-8e24-8f0b3e55064e",
              "parentUUID": "7901603b-113a-40c4-9b36-54f89051812f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5b220e2e-f464-4a6c-8e24-8f0b3e55064e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3252,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "bda1ec81-f75f-4027-b7e2-696b3707c0b1",
          "title": "focus",
          "fullFile": "G:\\Workspace\\mattermost\\desktop\\dist\\tests\\e2e_bundle.js",
          "file": "\\dist\\tests\\e2e_bundle.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"focus\"",
              "fullTitle": "focus \"before each\" hook in \"focus\"",
              "timedOut": false,
              "duration": 4849,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "env.cleanDataDir();env.createTestUserDataDir();env.cleanTestConfig();fs.writeFileSync(env.configFilePath,JSON.stringify(config));await asyncSleep(1000);this.app=await env.getApp();this.serverMap=await env.getServerMap(this.app);",
              "err": {},
              "uuid": "f88ef8b2-6a9d-4bce-bc76-684717d51b4e",
              "parentUUID": "bda1ec81-f75f-4027-b7e2-696b3707c0b1",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"focus\"",
              "fullTitle": "focus \"after each\" hook in \"focus\"",
              "timedOut": false,
              "duration": 8584,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if(this.app){await this.app.close();}await env.clearElectronInstances();",
              "err": {},
              "uuid": "e68e46b5-dcbc-415f-91dd-cc2bea76e50b",
              "parentUUID": "bda1ec81-f75f-4027-b7e2-696b3707c0b1",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "14bf1048-d4f1-4089-9771-8a2bc5040563",
              "title": "Focus textbox tests",
              "fullFile": "G:\\Workspace\\mattermost\\desktop\\dist\\tests\\e2e_bundle.js",
              "file": "\\dist\\tests\\e2e_bundle.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"Focus textbox tests\"",
                  "fullTitle": "focus Focus textbox tests \"before each\" hook in \"Focus textbox tests\"",
                  "timedOut": false,
                  "duration": 6093,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const loadingScreen=this.app.windows().find(window=>window.url().includes('loadingScreen'));await loadingScreen.waitForSelector('.LoadingScreen',{state:'hidden'});firstServer=this.serverMap[`${config.teams[0].name}___TAB_MESSAGING`].win;await env.loginToMattermost(firstServer);const textbox=await firstServer.waitForSelector('#post_textbox');textbox.focus();",
                  "err": {},
                  "uuid": "27831bd2-e3fa-42f2-aac2-5bb13908fd14",
                  "parentUUID": "14bf1048-d4f1-4089-9771-8a2bc5040563",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "MM-T1315 should return focus to the message box when closing the settings window",
                  "fullTitle": "focus Focus textbox tests MM-T1315 should return focus to the message box when closing the settings window",
                  "timedOut": false,
                  "duration": 3698,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "this.app.evaluate(({ipcMain},showWindow)=>{ipcMain.emit(showWindow);},SHOW_SETTINGS_WINDOW);const settingsWindow=await this.app.waitForEvent('window',{predicate:window=>window.url().includes('settings')});await settingsWindow.waitForSelector('.settingsPage.container');await settingsWindow.close();const isTextboxFocused=await firstServer.$eval('#post_textbox',el=>el===document.activeElement);isTextboxFocused.should.be.true;// Make sure you can just start typing and it'll go in the post textbox\nawait asyncSleep(500);robot.typeString('Mattermost');await asyncSleep(500);const textboxString=await firstServer.inputValue('#post_textbox');textboxString.should.equal('Mattermost');",
                  "err": {},
                  "uuid": "6fa50aef-8a2c-48ad-8b33-1a41fa2d94bc",
                  "parentUUID": "14bf1048-d4f1-4089-9771-8a2bc5040563",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "MM-T1316 should return focus to the message box when closing the settings window",
                  "fullTitle": "focus Focus textbox tests MM-T1316 should return focus to the message box when closing the settings window",
                  "timedOut": false,
                  "duration": 3936,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const mainView=this.app.windows().find(window=>window.url().includes('index'));const dropdownView=this.app.windows().find(window=>window.url().includes('dropdown'));await mainView.click('.TeamDropdownButton');await dropdownView.click('.TeamDropdown .TeamDropdown__button.addServer');const newServerView=await this.app.waitForEvent('window',{predicate:window=>window.url().includes('newServer')});await newServerView.waitForSelector('#cancelNewServerModal');await newServerView.click('#cancelNewServerModal');const isTextboxFocused=await firstServer.$eval('#post_textbox',el=>el===document.activeElement);isTextboxFocused.should.be.true;// Make sure you can just start typing and it'll go in the post textbox\nawait asyncSleep(500);robot.typeString('Mattermost');await asyncSleep(500);const textboxString=await firstServer.inputValue('#post_textbox');textboxString.should.equal('Mattermost');",
                  "err": {},
                  "uuid": "ca2fbf9f-e489-43b4-afe7-9fbc96c3f503",
                  "parentUUID": "14bf1048-d4f1-4089-9771-8a2bc5040563",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "MM-T1317 should return focus to the focused box when switching servers",
                  "fullTitle": "focus Focus textbox tests MM-T1317 should return focus to the focused box when switching servers",
                  "timedOut": false,
                  "duration": 6311,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const mainView=this.app.windows().find(window=>window.url().includes('index'));const dropdownView=this.app.windows().find(window=>window.url().includes('dropdown'));await mainView.click('.TeamDropdownButton');await dropdownView.click('.TeamDropdown .TeamDropdown__button:has-text(\"community\")');// eslint-disable-next-line dot-notation\nconst secondServer=this.serverMap['community___TAB_MESSAGING'].win;await secondServer.waitForSelector('#input_loginId');await secondServer.focus('#input_loginId');await mainView.click('.TeamDropdownButton');await dropdownView.click(`.TeamDropdown .TeamDropdown__button:has-text(\"${config.teams[0].name}\")`);const isTextboxFocused=await firstServer.$eval('#post_textbox',el=>el===document.activeElement);isTextboxFocused.should.be.true;// Make sure you can just start typing and it'll go in the post textbox\nawait asyncSleep(500);robot.typeString('Mattermost');await asyncSleep(500);const textboxString=await firstServer.inputValue('#post_textbox');textboxString.should.equal('Mattermost');await mainView.click('.TeamDropdownButton');await dropdownView.click('.TeamDropdown .TeamDropdown__button:has-text(\"community\")');const isLoginFocused=await secondServer.$eval('#input_loginId',el=>el===document.activeElement);isLoginFocused.should.be.true;// Make sure you can just start typing and it'll go in the post textbox\nawait asyncSleep(500);robot.typeString('username');await asyncSleep(500);const loginString=await secondServer.inputValue('#input_loginId');loginString.should.equal('username');",
                  "err": {},
                  "uuid": "91875bbb-6849-4f72-a117-90e13f5c9175",
                  "parentUUID": "14bf1048-d4f1-4089-9771-8a2bc5040563",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6fa50aef-8a2c-48ad-8b33-1a41fa2d94bc",
                "ca2fbf9f-e489-43b4-afe7-9fbc96c3f503",
                "91875bbb-6849-4f72-a117-90e13f5c9175"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 13945,
              "root": false,
              "rootEmpty": false,
              "_timeout": 40000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 40000
        },
        {
          "uuid": "614ae3a0-3392-4d7f-bf1f-d97e5057fa2a",
          "title": "dark_mode",
          "fullFile": "G:\\Workspace\\mattermost\\desktop\\dist\\tests\\e2e_bundle.js",
          "file": "\\dist\\tests\\e2e_bundle.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook",
              "fullTitle": "dark_mode \"before each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "env.cleanDataDir();env.createTestUserDataDir();env.cleanTestConfig();fs.writeFileSync(env.configFilePath,JSON.stringify(config));await asyncSleep(1000);this.app=await env.getApp();this.serverMap=await env.getServerMap(this.app);",
              "err": {},
              "uuid": "b4cf5ad2-eab5-4a0d-a0de-52919a083bdc",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook",
              "fullTitle": "dark_mode \"after each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if(this.app){await this.app.close();}await env.clearElectronInstances();",
              "err": {},
              "uuid": "13033ad4-5ff1-4a7b-bf04-f252bd3dd5a9",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "7e0839c6-bc8f-43c0-83ce-b74e746d0265",
          "title": "back_button",
          "fullFile": "G:\\Workspace\\mattermost\\desktop\\dist\\tests\\e2e_bundle.js",
          "file": "\\dist\\tests\\e2e_bundle.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"back_button\"",
              "fullTitle": "back_button \"before each\" hook in \"back_button\"",
              "timedOut": false,
              "duration": 3659,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "env.cleanDataDir();env.createTestUserDataDir();env.cleanTestConfig();fs.writeFileSync(env.configFilePath,JSON.stringify(config));await asyncSleep(1000);this.app=await env.getApp();this.serverMap=await env.getServerMap(this.app);",
              "err": {},
              "uuid": "66b830f7-0aba-4768-9de9-4d4a94831aae",
              "parentUUID": "7e0839c6-bc8f-43c0-83ce-b74e746d0265",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"back_button\"",
              "fullTitle": "back_button \"after each\" hook in \"back_button\"",
              "timedOut": false,
              "duration": 8147,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if(this.app){await this.app.close();}await env.clearElectronInstances();",
              "err": {},
              "uuid": "955b3022-6686-4141-ac08-a619ad4a860c",
              "parentUUID": "7e0839c6-bc8f-43c0-83ce-b74e746d0265",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "MM-T2633 Back button should behave as expected",
              "fullTitle": "back_button MM-T2633 Back button should behave as expected",
              "timedOut": false,
              "duration": 8379,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const mainWindow=this.app.windows().find(window=>window.url().includes('index'));const loadingScreen=this.app.windows().find(window=>window.url().includes('loadingScreen'));await loadingScreen.waitForSelector('.LoadingScreen',{state:'hidden'});const firstServer=this.serverMap[`${config.teams[0].name}___TAB_MESSAGING`].win;await firstServer.click('a:has-text(\"OneLogin\")');let backButton=await mainWindow.waitForSelector('button:has-text(\"Back\")');backButton.should.not.be.null;let poweredByOneLogin=await firstServer.waitForSelector('a:has-text(\"Powered by OneLogin\")');poweredByOneLogin.should.not.be.null;await backButton.click();let loginPrompt=await firstServer.waitForSelector('#input_loginId');loginPrompt.should.not.be.null;await mainWindow.waitForSelector('button:has-text(\"Back\")',{state:'hidden'});let isNewWindow=false;this.app.on('window',()=>{isNewWindow=true;});const oneLoginUrl=firstServer.url();await firstServer.click('a:has-text(\"OneLogin\")');poweredByOneLogin=await firstServer.waitForSelector('a:has-text(\"Powered by OneLogin\")');poweredByOneLogin.click();backButton=await mainWindow.waitForSelector('button:has-text(\"Back\")');backButton.should.not.be.null;const frameUrl=firstServer.url();frameUrl.should.not.equal(oneLoginUrl);isNewWindow.should.be.false;await backButton.click();await backButton.click();loginPrompt=await firstServer.waitForSelector('#input_loginId');loginPrompt.should.not.be.null;",
              "err": {},
              "uuid": "2dcc396f-86da-4582-8747-c7b246afd303",
              "parentUUID": "7e0839c6-bc8f-43c0-83ce-b74e746d0265",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2dcc396f-86da-4582-8747-c7b246afd303"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8379,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "47799921-efd2-4464-910c-e64511bc5f35",
          "title": "copylink",
          "fullFile": "G:\\Workspace\\mattermost\\desktop\\dist\\tests\\e2e_bundle.js",
          "file": "\\dist\\tests\\e2e_bundle.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"copylink\"",
              "fullTitle": "copylink \"before each\" hook in \"copylink\"",
              "timedOut": false,
              "duration": 4476,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "env.cleanDataDir();env.createTestUserDataDir();env.cleanTestConfig();fs.writeFileSync(env.configFilePath,JSON.stringify(config));await asyncSleep(1000);this.app=await env.getApp();this.serverMap=await env.getServerMap(this.app);",
              "err": {},
              "uuid": "3874756b-e172-491c-ba86-d83d4c1277d3",
              "parentUUID": "47799921-efd2-4464-910c-e64511bc5f35",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"copylink\"",
              "fullTitle": "copylink \"after each\" hook in \"copylink\"",
              "timedOut": false,
              "duration": 8465,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if(this.app){await this.app.close();}await env.clearElectronInstances();",
              "err": {},
              "uuid": "edcee853-64cc-4716-ac97-616c4f26ebdc",
              "parentUUID": "47799921-efd2-4464-910c-e64511bc5f35",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "MM-T125 Copy Link can be used from channel LHS",
              "fullTitle": "copylink MM-T125 Copy Link can be used from channel LHS",
              "timedOut": false,
              "duration": 7419,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const loadingScreen=this.app.windows().find(window=>window.url().includes('loadingScreen'));await loadingScreen.waitForSelector('.LoadingScreen',{state:'hidden'});const firstServer=this.serverMap[`${config.teams[0].name}___TAB_MESSAGING`].win;await env.loginToMattermost(firstServer);await firstServer.waitForSelector('#sidebarItem_suscipit-4');await firstServer.click('#sidebarItem_suscipit-4');await firstServer.click('#sidebarItem_suscipit-4',{button:'right'});await firstServer.click('text=Copy Linksint >> span');await firstServer.click('#sidebarItem_town-square');await firstServer.click('#post_textbox');const clipboardText=clipboard.readText();await firstServer.fill('#post_textbox',clipboardText);const content=await firstServer.locator('#post_textbox').textContent();content.should.contain('/ad-1/channels/suscipit-4');",
              "err": {},
              "uuid": "ce5542e1-21cf-419c-972b-dd034140b369",
              "parentUUID": "47799921-efd2-4464-910c-e64511bc5f35",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ce5542e1-21cf-419c-972b-dd034140b369"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7419,
          "root": false,
          "rootEmpty": false,
          "_timeout": 40000
        },
        {
          "uuid": "9d79969d-adfb-4383-8ca0-3e0e23b90009",
          "title": "menu_bar/dropdown",
          "fullFile": "G:\\Workspace\\mattermost\\desktop\\dist\\tests\\e2e_bundle.js",
          "file": "\\dist\\tests\\e2e_bundle.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"menu_bar/dropdown\"",
              "fullTitle": "menu_bar/dropdown \"before each\" hook in \"menu_bar/dropdown\"",
              "timedOut": false,
              "duration": 3612,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "env.createTestUserDataDir();env.cleanTestConfig();fs.writeFileSync(env.configFilePath,JSON.stringify(config));await asyncSleep(1000);this.app=await env.getApp();",
              "err": {},
              "uuid": "515790a5-7a2e-46bb-90fe-a057ec74a1f2",
              "parentUUID": "9d79969d-adfb-4383-8ca0-3e0e23b90009",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"menu_bar/dropdown\"",
              "fullTitle": "menu_bar/dropdown \"after each\" hook in \"menu_bar/dropdown\"",
              "timedOut": false,
              "duration": 7583,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if(this.app){await this.app.close();}await env.clearElectronInstances();",
              "err": {},
              "uuid": "8eca94d7-bb10-4bc4-ae9d-8e5b710902ee",
              "parentUUID": "9d79969d-adfb-4383-8ca0-3e0e23b90009",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "MM-T4405 should set name of menu item from config file",
              "fullTitle": "menu_bar/dropdown MM-T4405 should set name of menu item from config file",
              "timedOut": false,
              "duration": 96,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const mainWindow=this.app.windows().find(window=>window.url().includes('index'));const dropdownView=this.app.windows().find(window=>window.url().includes('dropdown'));await mainWindow.click('.TeamDropdownButton');const firstMenuItem=await dropdownView.innerText('.TeamDropdown button.TeamDropdown__button:nth-child(1) span');const secondMenuItem=await dropdownView.innerText('.TeamDropdown button.TeamDropdown__button:nth-child(2) span');firstMenuItem.should.equal(config.teams[0].name);secondMenuItem.should.equal(config.teams[1].name);",
              "err": {},
              "uuid": "aef65c41-8960-4ad9-85f7-e96e9977805c",
              "parentUUID": "9d79969d-adfb-4383-8ca0-3e0e23b90009",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MM-T4406 should only show dropdown when button is clicked",
              "fullTitle": "menu_bar/dropdown MM-T4406 should only show dropdown when button is clicked",
              "timedOut": false,
              "duration": 169,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const mainWindow=this.app.windows().find(window=>window.url().includes('index'));const browserWindow=await this.app.browserWindow(mainWindow);let dropdownHeight=await browserWindow.evaluate(window=>window.getBrowserViews().find(view=>view.webContents.getURL().includes('dropdown')).getBounds().height);dropdownHeight.should.equal(0);await mainWindow.click('.TeamDropdownButton');dropdownHeight=await browserWindow.evaluate(window=>window.getBrowserViews().find(view=>view.webContents.getURL().includes('dropdown')).getBounds().height);dropdownHeight.should.be.greaterThan(0);await mainWindow.click('.TabBar');dropdownHeight=await browserWindow.evaluate(window=>window.getBrowserViews().find(view=>view.webContents.getURL().includes('dropdown')).getBounds().height);dropdownHeight.should.equal(0);",
              "err": {},
              "uuid": "c0e4d217-910c-4ec2-838b-72f2f8428636",
              "parentUUID": "9d79969d-adfb-4383-8ca0-3e0e23b90009",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MM-T4407 should open the new server prompt after clicking the add button",
              "fullTitle": "menu_bar/dropdown MM-T4407 should open the new server prompt after clicking the add button",
              "timedOut": false,
              "duration": 383,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const mainWindow=this.app.windows().find(window=>window.url().includes('index'));const dropdownView=this.app.windows().find(window=>window.url().includes('dropdown'));await mainWindow.click('.TeamDropdownButton');await dropdownView.click('.TeamDropdown__button.addServer');const newServerModal=await this.app.waitForEvent('window',{predicate:window=>window.url().includes('newServer')});const modalTitle=await newServerModal.innerText('#newServerModal .modal-title');modalTitle.should.equal('Add Server');",
              "err": {},
              "uuid": "49eee1fb-11f9-4ca1-b880-f0eb5a617a62",
              "parentUUID": "9d79969d-adfb-4383-8ca0-3e0e23b90009",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MM-T4408 should show only the selected team",
              "fullTitle": "menu_bar/dropdown MM-T4408 should show only the selected team",
              "timedOut": false,
              "duration": 195,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const mainWindow=this.app.windows().find(window=>window.url().includes('index'));const browserWindow=await this.app.browserWindow(mainWindow);let firstViewIsAttached=await browserWindow.evaluate((window,url)=>Boolean(window.getBrowserViews().find(view=>view.webContents.getURL()===url)),env.exampleURL);firstViewIsAttached.should.be.true;let secondViewIsAttached=await browserWindow.evaluate(window=>Boolean(window.getBrowserViews().find(view=>view.webContents.getURL()==='https://github.com/')));secondViewIsAttached.should.be.false;const dropdownView=this.app.windows().find(window=>window.url().includes('dropdown'));await mainWindow.click('.TeamDropdownButton');await dropdownView.click('.TeamDropdown button.TeamDropdown__button:nth-child(2)');firstViewIsAttached=await browserWindow.evaluate((window,url)=>Boolean(window.getBrowserViews().find(view=>view.webContents.getURL()===url)),env.exampleURL);firstViewIsAttached.should.be.false;secondViewIsAttached=await browserWindow.evaluate(window=>Boolean(window.getBrowserViews().find(view=>view.webContents.getURL()==='https://github.com/')));secondViewIsAttached.should.be.true;",
              "err": {},
              "uuid": "c2a0e7fc-9115-444b-86d6-bf618fdab9fe",
              "parentUUID": "9d79969d-adfb-4383-8ca0-3e0e23b90009",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "aef65c41-8960-4ad9-85f7-e96e9977805c",
            "c0e4d217-910c-4ec2-838b-72f2f8428636",
            "49eee1fb-11f9-4ca1-b880-f0eb5a617a62",
            "c2a0e7fc-9115-444b-86d6-bf618fdab9fe"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 843,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "c1207e65-677c-40fd-add1-dd6979e1317e",
          "title": "edit_menu",
          "fullFile": "G:\\Workspace\\mattermost\\desktop\\dist\\tests\\e2e_bundle.js",
          "file": "\\dist\\tests\\e2e_bundle.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"edit_menu\"",
              "fullTitle": "edit_menu \"before each\" hook in \"edit_menu\"",
              "timedOut": false,
              "duration": 4572,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "env.cleanDataDir();env.createTestUserDataDir();env.cleanTestConfig();fs.writeFileSync(env.configFilePath,JSON.stringify(config));await asyncSleep(1000);this.app=await env.getApp();this.serverMap=await env.getServerMap(this.app);",
              "err": {},
              "uuid": "e9996a08-c00b-41a1-8738-359c8919fa12",
              "parentUUID": "c1207e65-677c-40fd-add1-dd6979e1317e",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"edit_menu\"",
              "fullTitle": "edit_menu \"after each\" hook in \"edit_menu\"",
              "timedOut": false,
              "duration": 8368,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if(this.app){await this.app.close();}await env.clearElectronInstances();",
              "err": {},
              "uuid": "4e51f8a9-9fa0-4aea-9a28-d803a2cbd10c",
              "parentUUID": "c1207e65-677c-40fd-add1-dd6979e1317e",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "MM-T807 Undo in the Menu Bar",
              "fullTitle": "edit_menu MM-T807 Undo in the Menu Bar",
              "timedOut": false,
              "duration": 7925,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const loadingScreen=this.app.windows().find(window=>window.url().includes('loadingScreen'));await loadingScreen.waitForSelector('.LoadingScreen',{state:'hidden'});const firstServer=this.serverMap[`${config.teams[0].name}___TAB_MESSAGING`].win;await env.loginToMattermost(firstServer);await firstServer.waitForSelector('#sidebarItem_suscipit-4');// click on sint channel\nawait firstServer.click('#sidebarItem_suscipit-4');await firstServer.click('#post_textbox');await firstServer.type('#post_textbox','Mattermost');await firstServer.click('#post_textbox');robot.keyTap('z',[env.cmdOrCtrl]);await asyncSleep(500);const content=await firstServer.inputValue('#post_textbox');content.should.be.equal('Mattermos');",
              "err": {},
              "uuid": "c5a8390f-c1c2-4f25-85fa-459f55ae5892",
              "parentUUID": "c1207e65-677c-40fd-add1-dd6979e1317e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MM-T808 Redo in the Menu Bar",
              "fullTitle": "edit_menu MM-T808 Redo in the Menu Bar",
              "timedOut": false,
              "duration": 9118,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const loadingScreen=this.app.windows().find(window=>window.url().includes('loadingScreen'));await loadingScreen.waitForSelector('.LoadingScreen',{state:'hidden'});const firstServer=this.serverMap[`${config.teams[0].name}___TAB_MESSAGING`].win;await env.loginToMattermost(firstServer);await firstServer.waitForSelector('#sidebarItem_suscipit-4');// click on sint channel\nawait firstServer.click('#sidebarItem_suscipit-4');await firstServer.click('#post_textbox');await firstServer.type('#post_textbox','Mattermost');await firstServer.click('#post_textbox');robot.keyTap('z',[env.cmdOrCtrl]);await asyncSleep(500);const textAfterUndo=await firstServer.inputValue('#post_textbox');textAfterUndo.should.be.equal('Mattermos');await firstServer.click('#post_textbox');robot.keyTap('z',['shift',env.cmdOrCtrl]);await asyncSleep(500);const content=await firstServer.inputValue('#post_textbox');content.should.be.equal('Mattermost');",
              "err": {},
              "uuid": "eb79fad9-105e-4c93-99dc-f3d78f3af316",
              "parentUUID": "c1207e65-677c-40fd-add1-dd6979e1317e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MM-T809 Cut in the Menu Bar",
              "fullTitle": "edit_menu MM-T809 Cut in the Menu Bar",
              "timedOut": false,
              "duration": 8734,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const loadingScreen=this.app.windows().find(window=>window.url().includes('loadingScreen'));await loadingScreen.waitForSelector('.LoadingScreen',{state:'hidden'});const firstServer=this.serverMap[`${config.teams[0].name}___TAB_MESSAGING`].win;await env.loginToMattermost(firstServer);await firstServer.waitForSelector('#sidebarItem_suscipit-4');// click on sint channel\nawait firstServer.click('#sidebarItem_suscipit-4');await firstServer.click('#post_textbox');await firstServer.type('#post_textbox','Mattermost');robot.keyTap('a',[env.cmdOrCtrl]);await asyncSleep(500);robot.keyTap('x',[env.cmdOrCtrl]);await asyncSleep(500);const content=await firstServer.inputValue('#post_textbox');content.should.be.equal('');",
              "err": {},
              "uuid": "5f8f11cc-c978-4e6a-bd3f-d27fb20e0be3",
              "parentUUID": "c1207e65-677c-40fd-add1-dd6979e1317e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MM-T810 Copy in the Menu Bar",
              "fullTitle": "edit_menu MM-T810 Copy in the Menu Bar",
              "timedOut": false,
              "duration": 9611,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const loadingScreen=this.app.windows().find(window=>window.url().includes('loadingScreen'));await loadingScreen.waitForSelector('.LoadingScreen',{state:'hidden'});const firstServer=this.serverMap[`${config.teams[0].name}___TAB_MESSAGING`].win;await env.loginToMattermost(firstServer);await firstServer.waitForSelector('#sidebarItem_suscipit-4');// click on sint channel\nawait firstServer.click('#sidebarItem_suscipit-4');await firstServer.click('#post_textbox');await firstServer.type('#post_textbox','Mattermost');robot.keyTap('a',[env.cmdOrCtrl]);await asyncSleep(500);robot.keyTap('c',[env.cmdOrCtrl]);await asyncSleep(500);await firstServer.click('#post_textbox');robot.keyTap('v',[env.cmdOrCtrl]);await asyncSleep(500);const content=await firstServer.inputValue('#post_textbox');content.should.be.equal('MattermostMattermost');",
              "err": {},
              "uuid": "ff995ec1-17eb-4e8b-8e1e-608e06a6a4db",
              "parentUUID": "c1207e65-677c-40fd-add1-dd6979e1317e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MM-T811 Paste in the Menu Bar",
              "fullTitle": "edit_menu MM-T811 Paste in the Menu Bar",
              "timedOut": false,
              "duration": 10213,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const loadingScreen=this.app.windows().find(window=>window.url().includes('loadingScreen'));await loadingScreen.waitForSelector('.LoadingScreen',{state:'hidden'});const firstServer=this.serverMap[`${config.teams[0].name}___TAB_MESSAGING`].win;await env.loginToMattermost(firstServer);await firstServer.waitForSelector('#sidebarItem_suscipit-4');// click on sint channel\nawait firstServer.click('#sidebarItem_suscipit-4');await firstServer.click('#post_textbox');await firstServer.type('#post_textbox','Mattermost');robot.keyTap('a',[env.cmdOrCtrl]);await asyncSleep(500);robot.keyTap('c',[env.cmdOrCtrl]);await asyncSleep(500);robot.keyTap('a',[env.cmdOrCtrl]);await asyncSleep(500);robot.keyTap('v',[env.cmdOrCtrl]);await asyncSleep(500);const content=await firstServer.inputValue('#post_textbox');content.should.be.equal('Mattermost');",
              "err": {},
              "uuid": "ac068715-a6af-4a63-b645-a85f65c12c57",
              "parentUUID": "c1207e65-677c-40fd-add1-dd6979e1317e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MM-T812 Select All in the Menu Bar",
              "fullTitle": "edit_menu MM-T812 Select All in the Menu Bar",
              "timedOut": false,
              "duration": 8010,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const loadingScreen=this.app.windows().find(window=>window.url().includes('loadingScreen'));await loadingScreen.waitForSelector('.LoadingScreen',{state:'hidden'});const firstServer=this.serverMap[`${config.teams[0].name}___TAB_MESSAGING`].win;await env.loginToMattermost(firstServer);await firstServer.waitForSelector('#sidebarItem_suscipit-4');// click on sint channel\nawait firstServer.click('#sidebarItem_suscipit-4');await firstServer.click('#post_textbox');await firstServer.fill('#post_textbox','Mattermost');robot.keyTap('a',[env.cmdOrCtrl]);await asyncSleep(500);const channelHeaderText=await firstServer.evaluate('window.getSelection().toString()');channelHeaderText.should.equal('Mattermost');",
              "err": {},
              "uuid": "4eec8515-7242-4786-973d-d493cd0ab455",
              "parentUUID": "c1207e65-677c-40fd-add1-dd6979e1317e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c5a8390f-c1c2-4f25-85fa-459f55ae5892",
            "eb79fad9-105e-4c93-99dc-f3d78f3af316",
            "5f8f11cc-c978-4e6a-bd3f-d27fb20e0be3",
            "ff995ec1-17eb-4e8b-8e1e-608e06a6a4db",
            "ac068715-a6af-4a63-b645-a85f65c12c57",
            "4eec8515-7242-4786-973d-d493cd0ab455"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 53611,
          "root": false,
          "rootEmpty": false,
          "_timeout": 40000
        },
        {
          "uuid": "bbc64378-af8a-4a03-9cf9-f4561bf846c1",
          "title": "file_menu/dropdown",
          "fullFile": "G:\\Workspace\\mattermost\\desktop\\dist\\tests\\e2e_bundle.js",
          "file": "\\dist\\tests\\e2e_bundle.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"file_menu/dropdown\"",
              "fullTitle": "file_menu/dropdown \"before each\" hook in \"file_menu/dropdown\"",
              "timedOut": false,
              "duration": 3676,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "env.createTestUserDataDir();env.cleanTestConfig();fs.writeFileSync(env.configFilePath,JSON.stringify(config));await asyncSleep(1000);this.app=await env.getApp();skipAfterEach=false;",
              "err": {},
              "uuid": "7cde3234-7657-46d5-b91e-73b2c6041ead",
              "parentUUID": "bbc64378-af8a-4a03-9cf9-f4561bf846c1",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"file_menu/dropdown\"",
              "fullTitle": "file_menu/dropdown \"after each\" hook in \"file_menu/dropdown\"",
              "timedOut": false,
              "duration": 7832,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if(this.app&&skipAfterEach===false){await this.app.close();}await env.clearElectronInstances();",
              "err": {},
              "uuid": "1c424552-6a36-41f4-99a1-fb7fa4055f74",
              "parentUUID": "bbc64378-af8a-4a03-9cf9-f4561bf846c1",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "MM-T1313 Open Settings modal using keyboard shortcuts",
              "fullTitle": "file_menu/dropdown MM-T1313 Open Settings modal using keyboard shortcuts",
              "timedOut": false,
              "duration": 363,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const mainWindow=this.app.windows().find(window=>window.url().includes('index'));mainWindow.should.not.be.null;robot.keyTap(',',[env.cmdOrCtrl]);const settingsWindow=await this.app.waitForEvent('window',{predicate:window=>window.url().includes('settings')});settingsWindow.should.not.be.null;",
              "err": {},
              "uuid": "0fb2182b-c7cc-44fc-b12b-a9e83f3a8833",
              "parentUUID": "bbc64378-af8a-4a03-9cf9-f4561bf846c1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MM-T805 Sign in to Another Server Window opens using menu item",
              "fullTitle": "file_menu/dropdown MM-T805 Sign in to Another Server Window opens using menu item",
              "timedOut": false,
              "duration": 922,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const mainWindow=this.app.windows().find(window=>window.url().includes('index'));mainWindow.should.not.be.null;await mainWindow.click('button.three-dot-menu');robot.keyTap('f');robot.keyTap('s');robot.keyTap('s');robot.keyTap('enter');const signInToAnotherServerWindow=await this.app.waitForEvent('window',{predicate:window=>window.url().includes('newServer')});signInToAnotherServerWindow.should.not.be.null;",
              "err": {},
              "uuid": "bef59b32-9cee-43d6-ab11-af33bdd8a771",
              "parentUUID": "bbc64378-af8a-4a03-9cf9-f4561bf846c1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MM-T804 Preferences in Menu Bar open the Settings page",
              "fullTitle": "file_menu/dropdown MM-T804 Preferences in Menu Bar open the Settings page",
              "timedOut": false,
              "duration": 1608,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const mainWindow=this.app.windows().find(window=>window.url().includes('index'));mainWindow.should.not.be.null;robot.keyTap(',',[env.cmdOrCtrl]);const settingsWindow=await this.app.waitForEvent('window',{predicate:window=>window.url().includes('settings')});settingsWindow.should.not.be.null;if(process.platform!=='darwin'){robot.keyTap('w',[env.cmdOrCtrl]);//Opening the menu bar\nrobot.keyTap('alt');robot.keyTap('enter');robot.keyTap('f');robot.keyTap('s');robot.keyTap('enter');const settingsWindowFromMenu=await this.app.waitForEvent('window',{predicate:window=>window.url().includes('settings')});settingsWindowFromMenu.should.not.be.null;}",
              "err": {},
              "uuid": "b75e601d-8375-45ce-b8b9-241fdabd652e",
              "parentUUID": "bbc64378-af8a-4a03-9cf9-f4561bf846c1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0fb2182b-c7cc-44fc-b12b-a9e83f3a8833",
            "bef59b32-9cee-43d6-ab11-af33bdd8a771",
            "b75e601d-8375-45ce-b8b9-241fdabd652e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2893,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "e7a151fc-e094-4136-9540-347b3bce887e",
          "title": "history_menu",
          "fullFile": "G:\\Workspace\\mattermost\\desktop\\dist\\tests\\e2e_bundle.js",
          "file": "\\dist\\tests\\e2e_bundle.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"history_menu\"",
              "fullTitle": "history_menu \"before each\" hook in \"history_menu\"",
              "timedOut": false,
              "duration": 4458,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "env.cleanDataDir();env.createTestUserDataDir();env.cleanTestConfig();fs.writeFileSync(env.configFilePath,JSON.stringify(config));await asyncSleep(1000);this.app=await env.getApp();this.serverMap=await env.getServerMap(this.app);",
              "err": {},
              "uuid": "68e4c4d1-1f3e-4ac0-9600-7b0f62c7ed25",
              "parentUUID": "e7a151fc-e094-4136-9540-347b3bce887e",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"history_menu\"",
              "fullTitle": "history_menu \"after each\" hook in \"history_menu\"",
              "timedOut": false,
              "duration": 8104,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if(this.app){await this.app.close();}await env.clearElectronInstances();",
              "err": {},
              "uuid": "ff077d84-ca64-4257-8c71-dc46af990463",
              "parentUUID": "e7a151fc-e094-4136-9540-347b3bce887e",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Click back and forward from history",
              "fullTitle": "history_menu Click back and forward from history",
              "timedOut": false,
              "duration": 8141,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const loadingScreen=this.app.windows().find(window=>window.url().includes('loadingScreen'));await loadingScreen.waitForSelector('.LoadingScreen',{state:'hidden'});const firstServer=this.serverMap[`${config.teams[0].name}___TAB_MESSAGING`].win;await env.loginToMattermost(firstServer);await firstServer.waitForSelector('#sidebarItem_suscipit-4');// click on sint channel\nawait firstServer.click('#sidebarItem_suscipit-4');// click on town square channel\nawait firstServer.click('#sidebarItem_town-square');await firstServer.locator('[aria-label=\"Back\"]').click();let channelHeaderText=await firstServer.$eval('#channelHeaderTitle',el=>el.firstChild.innerHTML);channelHeaderText.should.equal('sint');await firstServer.locator('[aria-label=\"Forward\"]').click();channelHeaderText=await firstServer.$eval('#channelHeaderTitle',el=>el.firstChild.innerHTML);channelHeaderText.should.equal('Town Square');",
              "err": {},
              "uuid": "7a2b1c19-3915-4311-9cab-feba87321b75",
              "parentUUID": "e7a151fc-e094-4136-9540-347b3bce887e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7a2b1c19-3915-4311-9cab-feba87321b75"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8141,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "65b0a45c-8a17-4d8e-9849-9f49cd88b6be",
          "title": "menu/menu",
          "fullFile": "G:\\Workspace\\mattermost\\desktop\\dist\\tests\\e2e_bundle.js",
          "file": "\\dist\\tests\\e2e_bundle.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"menu/menu\"",
              "fullTitle": "menu/menu \"before each\" hook in \"menu/menu\"",
              "timedOut": false,
              "duration": 3833,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "env.cleanDataDir();env.createTestUserDataDir();env.cleanTestConfig();fs.writeFileSync(env.configFilePath,JSON.stringify(config));await asyncSleep(1000);this.app=await env.getApp();",
              "err": {},
              "uuid": "0d3a8209-ddad-4d46-b243-6eec216605e1",
              "parentUUID": "65b0a45c-8a17-4d8e-9849-9f49cd88b6be",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"menu/menu\"",
              "fullTitle": "menu/menu \"after each\" hook in \"menu/menu\"",
              "timedOut": false,
              "duration": 8453,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if(this.app){await this.app.close();}await env.clearElectronInstances();",
              "err": {},
              "uuid": "9cd461bf-5892-45d6-be79-c802a83ee1a3",
              "parentUUID": "65b0a45c-8a17-4d8e-9849-9f49cd88b6be",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "MM-T4404 should open the 3 dot menu with Alt",
              "fullTitle": "menu/menu MM-T4404 should open the 3 dot menu with Alt",
              "timedOut": false,
              "duration": 1044,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const mainWindow=this.app.windows().find(window=>window.url().includes('index'));mainWindow.should.not.be.null;await mainWindow.bringToFront();await mainWindow.click('#app');// Settings window should open if Alt works\nrobot.keyTap('alt');robot.keyTap('enter');robot.keyTap('f');robot.keyTap('s');robot.keyTap('enter');const settingsWindow=await this.app.waitForEvent('window',{predicate:window=>window.url().includes('settings')});settingsWindow.should.not.be.null;",
              "err": {},
              "uuid": "31ccd799-d628-4154-966e-8b5695531227",
              "parentUUID": "65b0a45c-8a17-4d8e-9849-9f49cd88b6be",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "31ccd799-d628-4154-966e-8b5695531227"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1044,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "e2d4f60a-e0f5-464f-b4cb-082dadaf8df8",
          "title": "menu/view",
          "fullFile": "G:\\Workspace\\mattermost\\desktop\\dist\\tests\\e2e_bundle.js",
          "file": "\\dist\\tests\\e2e_bundle.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"menu/view\"",
              "fullTitle": "menu/view \"before each\" hook in \"menu/view\"",
              "timedOut": false,
              "duration": 4520,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "env.cleanDataDir();env.createTestUserDataDir();env.cleanTestConfig();fs.writeFileSync(env.configFilePath,JSON.stringify(config));await asyncSleep(1000);this.app=await env.getApp();this.serverMap=await env.getServerMap(this.app);",
              "err": {},
              "uuid": "c9aed692-7715-4af3-8e64-c702dc13ac18",
              "parentUUID": "e2d4f60a-e0f5-464f-b4cb-082dadaf8df8",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"menu/view\"",
              "fullTitle": "menu/view \"after each\" hook in \"menu/view\"",
              "timedOut": false,
              "duration": 8346,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if(this.app){await this.app.close();}await env.clearElectronInstances();",
              "err": {},
              "uuid": "d96a61ef-57b3-48b4-9cf4-bccd84a27992",
              "parentUUID": "e2d4f60a-e0f5-464f-b4cb-082dadaf8df8",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "MM-T813 Control+F should focus the search bar in Mattermost",
              "fullTitle": "menu/view MM-T813 Control+F should focus the search bar in Mattermost",
              "timedOut": false,
              "duration": 7552,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const loadingScreen=this.app.windows().find(window=>window.url().includes('loadingScreen'));await loadingScreen.waitForSelector('.LoadingScreen',{state:'hidden'});const firstServer=this.serverMap[`${config.teams[0].name}___TAB_MESSAGING`].win;await env.loginToMattermost(firstServer);await firstServer.waitForSelector('#searchBox');await asyncSleep(1000);robot.keyTap('f',[process.platform==='darwin'?'command':'control']);await asyncSleep(500);const isFocused=await firstServer.$eval('#searchBox',el=>el===document.activeElement);isFocused.should.be.true;const text=await firstServer.inputValue('#searchBox');text.should.include('in:');",
              "err": {},
              "uuid": "be03045d-2e07-42aa-b45a-62b9860f213b",
              "parentUUID": "e2d4f60a-e0f5-464f-b4cb-082dadaf8df8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MM-T816 Toggle Full Screen in the Menu Bar",
              "fullTitle": "menu/view MM-T816 Toggle Full Screen in the Menu Bar",
              "timedOut": false,
              "duration": 8598,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const mainWindow=this.app.windows().find(window=>window.url().includes('index'));const loadingScreen=this.app.windows().find(window=>window.url().includes('loadingScreen'));await loadingScreen.waitForSelector('.LoadingScreen',{state:'hidden'});const firstServer=this.serverMap[`${config.teams[0].name}___TAB_MESSAGING`].win;await env.loginToMattermost(firstServer);await firstServer.waitForSelector('#searchBox');let currentWidth=await firstServer.evaluate('window.outerWidth');let currentHeight=await firstServer.evaluate('window.outerHeight');await mainWindow.click('button.three-dot-menu');robot.keyTap('v');robot.keyTap('t');robot.keyTap('enter');await asyncSleep(1000);const fullScreenWidth=await firstServer.evaluate('window.outerWidth');const fullScreenHeight=await firstServer.evaluate('window.outerHeight');fullScreenWidth.should.be.greaterThan(currentWidth);fullScreenHeight.should.be.greaterThan(currentHeight);await mainWindow.click('button.three-dot-menu');robot.keyTap('v');robot.keyTap('t');robot.keyTap('enter');await asyncSleep(1000);currentWidth=await firstServer.evaluate('window.outerWidth');currentHeight=await firstServer.evaluate('window.outerHeight');currentWidth.should.be.lessThan(fullScreenWidth);currentHeight.should.be.lessThan(fullScreenHeight);",
              "err": {},
              "uuid": "5bd82c42-b1b4-429c-8a9c-d3747e112187",
              "parentUUID": "e2d4f60a-e0f5-464f-b4cb-082dadaf8df8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MM-T817 Actual Size Zoom in the menu bar",
              "fullTitle": "menu/view MM-T817 Actual Size Zoom in the menu bar",
              "timedOut": false,
              "duration": 7458,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const mainWindow=this.app.windows().find(window=>window.url().includes('index'));const browserWindow=await this.app.browserWindow(mainWindow);const loadingScreen=this.app.windows().find(window=>window.url().includes('loadingScreen'));await loadingScreen.waitForSelector('.LoadingScreen',{state:'hidden'});const firstServer=this.serverMap[`${config.teams[0].name}___TAB_MESSAGING`].win;const firstServerId=this.serverMap[`${config.teams[0].name}___TAB_MESSAGING`].webContentsId;await env.loginToMattermost(firstServer);await firstServer.waitForSelector('#searchBox');robot.keyTap('=',[env.cmdOrCtrl]);await asyncSleep(1000);let zoomLevel=await browserWindow.evaluate((window,id)=>window.getBrowserViews().find(view=>view.webContents.id===id).webContents.getZoomFactor(),firstServerId);zoomLevel.should.be.greaterThan(1);robot.keyTap('0',[env.cmdOrCtrl]);await asyncSleep(1000);zoomLevel=await browserWindow.evaluate((window,id)=>window.getBrowserViews().find(view=>view.webContents.id===id).webContents.getZoomFactor(),firstServerId);zoomLevel.should.be.equal(1);",
              "err": {},
              "uuid": "ec9555f8-08cf-4b97-8191-2161b94b5057",
              "parentUUID": "e2d4f60a-e0f5-464f-b4cb-082dadaf8df8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MM-T820 should open Developer Tools For Application Wrapper for main window",
              "fullTitle": "menu/view MM-T820 should open Developer Tools For Application Wrapper for main window",
              "timedOut": false,
              "duration": 4732,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const mainWindow=this.app.windows().find(window=>window.url().includes('loadingScreen'));const browserWindow=await this.app.browserWindow(mainWindow);const loadingScreen=this.app.windows().find(window=>window.url().includes('loadingScreen'));await loadingScreen.waitForSelector('.LoadingScreen',{state:'hidden'});let isDevToolsOpen=await browserWindow.evaluate(window=>{return window.webContents.isDevToolsOpened();});isDevToolsOpen.should.be.false;robot.keyTap('i',process.platform==='darwin'?['command','alt']:['control','shift']);await asyncSleep(1000);isDevToolsOpen=await browserWindow.evaluate(window=>{return window.webContents.isDevToolsOpened();});isDevToolsOpen.should.be.true;",
              "err": {},
              "uuid": "3246adfd-93ab-42db-80bd-7374147e2cfe",
              "parentUUID": "e2d4f60a-e0f5-464f-b4cb-082dadaf8df8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MM-T821 should open Developer Tools For Current Server for the active tab",
              "fullTitle": "menu/view MM-T821 should open Developer Tools For Current Server for the active tab",
              "timedOut": false,
              "duration": 5689,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const mainWindow=this.app.windows().find(window=>window.url().includes('loadingScreen'));const browserWindow=await this.app.browserWindow(mainWindow);const webContentsId=this.serverMap[`${config.teams[0].name}___TAB_MESSAGING`].webContentsId;const loadingScreen=this.app.windows().find(window=>window.url().includes('loadingScreen'));await loadingScreen.waitForSelector('.LoadingScreen',{state:'hidden'});let isDevToolsOpen=await browserWindow.evaluate((window,id)=>{return window.getBrowserViews().find(view=>view.webContents.id===id).webContents.isDevToolsOpened();},webContentsId);isDevToolsOpen.should.be.false;// Open Developer Tools for Current Server\nrobot.keyTap('alt');robot.keyTap('enter');robot.keyTap('v');robot.keyTap('d');robot.keyTap('d');robot.keyTap('enter');await asyncSleep(1000);isDevToolsOpen=await browserWindow.evaluate((window,id)=>{return window.getBrowserViews().find(view=>view.webContents.id===id).webContents.isDevToolsOpened();},webContentsId);isDevToolsOpen.should.be.true;",
              "err": {},
              "uuid": "70ef3d97-03fd-44ec-a8a7-4f919a7db4ae",
              "parentUUID": "e2d4f60a-e0f5-464f-b4cb-082dadaf8df8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "d721b5dd-9bbb-44a6-9dd4-b6868641b088",
              "title": "MM-T818 Zoom in from the menu bar",
              "fullFile": "G:\\Workspace\\mattermost\\desktop\\dist\\tests\\e2e_bundle.js",
              "file": "\\dist\\tests\\e2e_bundle.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "MM-T818 Zoom in when CmdOrCtrl+Plus is pressed",
                  "fullTitle": "menu/view MM-T818 Zoom in from the menu bar MM-T818 Zoom in when CmdOrCtrl+Plus is pressed",
                  "timedOut": false,
                  "duration": 6238,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const mainWindow=this.app.windows().find(window=>window.url().includes('index'));const browserWindow=await this.app.browserWindow(mainWindow);const loadingScreen=this.app.windows().find(window=>window.url().includes('loadingScreen'));await loadingScreen.waitForSelector('.LoadingScreen',{state:'hidden'});const firstServer=this.serverMap[`${config.teams[0].name}___TAB_MESSAGING`].win;const firstServerId=this.serverMap[`${config.teams[0].name}___TAB_MESSAGING`].webContentsId;await env.loginToMattermost(firstServer);await firstServer.waitForSelector('#searchBox');robot.keyTap('=',[env.cmdOrCtrl]);await asyncSleep(1000);const zoomLevel=await browserWindow.evaluate((window,id)=>window.getBrowserViews().find(view=>view.webContents.id===id).webContents.getZoomFactor(),firstServerId);zoomLevel.should.be.greaterThan(1);",
                  "err": {},
                  "uuid": "a82bf42e-e35d-482d-a942-591ee37ee83f",
                  "parentUUID": "d721b5dd-9bbb-44a6-9dd4-b6868641b088",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "MM-T818_1 Zoom in when CmdOrCtrl+Shift+Plus is pressed",
                  "fullTitle": "menu/view MM-T818 Zoom in from the menu bar MM-T818_1 Zoom in when CmdOrCtrl+Shift+Plus is pressed",
                  "timedOut": false,
                  "duration": 8192,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const mainWindow=this.app.windows().find(window=>window.url().includes('index'));const browserWindow=await this.app.browserWindow(mainWindow);const loadingScreen=this.app.windows().find(window=>window.url().includes('loadingScreen'));await loadingScreen.waitForSelector('.LoadingScreen',{state:'hidden'});const firstServer=this.serverMap[`${config.teams[0].name}___TAB_MESSAGING`].win;const firstServerId=this.serverMap[`${config.teams[0].name}___TAB_MESSAGING`].webContentsId;await env.loginToMattermost(firstServer);await firstServer.waitForSelector('#searchBox');// reset zoom\nawait setZoomFactorOfServer(browserWindow,firstServerId,1);await asyncSleep(1000);const initialZoom=await getZoomFactorOfServer(browserWindow,firstServerId);initialZoom.should.be.equal(1);robot.keyTap('=',[env.cmdOrCtrl,'shift']);await asyncSleep(1000);const zoomLevel=await getZoomFactorOfServer(browserWindow,firstServerId);zoomLevel.should.be.greaterThan(1);",
                  "err": {},
                  "uuid": "a7d09836-0498-4101-8419-51e51c354397",
                  "parentUUID": "d721b5dd-9bbb-44a6-9dd4-b6868641b088",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a82bf42e-e35d-482d-a942-591ee37ee83f",
                "a7d09836-0498-4101-8419-51e51c354397"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 14430,
              "root": false,
              "rootEmpty": false,
              "_timeout": 30000
            },
            {
              "uuid": "8534051b-c6fc-40d1-bb45-2f326a713d25",
              "title": "MM-T818 Zoom out from the menu bar",
              "fullFile": "G:\\Workspace\\mattermost\\desktop\\dist\\tests\\e2e_bundle.js",
              "file": "\\dist\\tests\\e2e_bundle.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "MM-T819 Zoom out when CmdOrCtrl+Minus is pressed",
                  "fullTitle": "menu/view MM-T818 Zoom out from the menu bar MM-T819 Zoom out when CmdOrCtrl+Minus is pressed",
                  "timedOut": false,
                  "duration": 25106,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const mainWindow=this.app.windows().find(window=>window.url().includes('index'));const browserWindow=await this.app.browserWindow(mainWindow);const loadingScreen=this.app.windows().find(window=>window.url().includes('loadingScreen'));await loadingScreen.waitForSelector('.LoadingScreen',{state:'hidden'});const firstServer=this.serverMap[`${config.teams[0].name}___TAB_MESSAGING`].win;const firstServerId=this.serverMap[`${config.teams[0].name}___TAB_MESSAGING`].webContentsId;await env.loginToMattermost(firstServer);await firstServer.waitForSelector('#searchBox');robot.keyTap('-',[env.cmdOrCtrl]);await asyncSleep(1000);const zoomLevel=await browserWindow.evaluate((window,id)=>window.getBrowserViews().find(view=>view.webContents.id===id).webContents.getZoomFactor(),firstServerId);zoomLevel.should.be.lessThan(1);",
                  "err": {},
                  "uuid": "a2d70a9a-fdd3-4f8b-89f4-77e7f6a6f39d",
                  "parentUUID": "8534051b-c6fc-40d1-bb45-2f326a713d25",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "MM-T819_1 Zoom out when CmdOrCtrl+Shift+Minus is pressed",
                  "fullTitle": "menu/view MM-T818 Zoom out from the menu bar MM-T819_1 Zoom out when CmdOrCtrl+Shift+Minus is pressed",
                  "timedOut": false,
                  "duration": 7233,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const mainWindow=this.app.windows().find(window=>window.url().includes('index'));const browserWindow=await this.app.browserWindow(mainWindow);const loadingScreen=this.app.windows().find(window=>window.url().includes('loadingScreen'));await loadingScreen.waitForSelector('.LoadingScreen',{state:'hidden'});const firstServer=this.serverMap[`${config.teams[0].name}___TAB_MESSAGING`].win;const firstServerId=this.serverMap[`${config.teams[0].name}___TAB_MESSAGING`].webContentsId;await env.loginToMattermost(firstServer);await firstServer.waitForSelector('#searchBox');// reset zoom\nawait setZoomFactorOfServer(browserWindow,firstServerId,1.0);await asyncSleep(1000);const initialZoom=await getZoomFactorOfServer(browserWindow,firstServerId);initialZoom.should.be.equal(1);robot.keyTap('-',[env.cmdOrCtrl,'shift']);await asyncSleep(1000);const zoomLevel=await getZoomFactorOfServer(browserWindow,firstServerId);zoomLevel.should.be.lessThan(1);",
                  "err": {},
                  "uuid": "8e0e50b8-efa4-4d1a-bc8b-8d428c35a3dc",
                  "parentUUID": "8534051b-c6fc-40d1-bb45-2f326a713d25",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a2d70a9a-fdd3-4f8b-89f4-77e7f6a6f39d",
                "8e0e50b8-efa4-4d1a-bc8b-8d428c35a3dc"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 32339,
              "root": false,
              "rootEmpty": false,
              "_timeout": 30000
            },
            {
              "uuid": "51062968-e1d9-4a6d-930a-6ee22fecb28f",
              "title": "Reload",
              "fullFile": "G:\\Workspace\\mattermost\\desktop\\dist\\tests\\e2e_bundle.js",
              "file": "\\dist\\tests\\e2e_bundle.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"Reload\"",
                  "fullTitle": "menu/view Reload \"before each\" hook in \"Reload\"",
                  "timedOut": false,
                  "duration": 3324,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const mainWindow=this.app.windows().find(window=>window.url().includes('index'));browserWindow=await this.app.browserWindow(mainWindow);webContentsId=this.serverMap[`${config.teams[0].name}___TAB_MESSAGING`].webContentsId;const loadingScreen=this.app.windows().find(window=>window.url().includes('loadingScreen'));await loadingScreen.waitForSelector('.LoadingScreen',{state:'hidden'});",
                  "err": {},
                  "uuid": "bb01c006-1626-4c66-b8c8-6ab995eae5b9",
                  "parentUUID": "51062968-e1d9-4a6d-930a-6ee22fecb28f",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "MM-T814 should reload page when pressing Ctrl+R",
                  "fullTitle": "menu/view Reload MM-T814 should reload page when pressing Ctrl+R",
                  "timedOut": false,
                  "duration": 1113,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const check=browserWindow.evaluate(setupPromise,webContentsId);await asyncSleep(500);robot.keyTap('r',[env.cmdOrCtrl]);const result=await check;result.should.be.true;",
                  "err": {},
                  "uuid": "a883ce95-4139-4f4d-82da-ab91975d1aca",
                  "parentUUID": "51062968-e1d9-4a6d-930a-6ee22fecb28f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "MM-T815 should reload page when pressing Ctrl+Shift+R",
                  "fullTitle": "menu/view Reload MM-T815 should reload page when pressing Ctrl+Shift+R",
                  "timedOut": false,
                  "duration": 1178,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const check=browserWindow.evaluate(setupPromise,webContentsId);await asyncSleep(500);robot.keyTap('r',[env.cmdOrCtrl,'shift']);const result=await check;result.should.be.true;",
                  "err": {},
                  "uuid": "b91a36f3-1137-4fe0-87ca-fdc981cd7699",
                  "parentUUID": "51062968-e1d9-4a6d-930a-6ee22fecb28f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a883ce95-4139-4f4d-82da-ab91975d1aca",
                "b91a36f3-1137-4fe0-87ca-fdc981cd7699"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2291,
              "root": false,
              "rootEmpty": false,
              "_timeout": 30000
            }
          ],
          "passes": [
            "be03045d-2e07-42aa-b45a-62b9860f213b",
            "5bd82c42-b1b4-429c-8a9c-d3747e112187",
            "ec9555f8-08cf-4b97-8191-2161b94b5057",
            "3246adfd-93ab-42db-80bd-7374147e2cfe",
            "70ef3d97-03fd-44ec-a8a7-4f919a7db4ae"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 34029,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "6b359f5b-5fa4-449e-a3ce-858d9514253a",
          "title": "Menu/window_menu",
          "fullFile": "G:\\Workspace\\mattermost\\desktop\\dist\\tests\\e2e_bundle.js",
          "file": "\\dist\\tests\\e2e_bundle.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Menu/window_menu\"",
              "fullTitle": "Menu/window_menu \"before each\" hook in \"Menu/window_menu\"",
              "timedOut": false,
              "duration": 3827,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "env.cleanDataDir();env.createTestUserDataDir();env.cleanTestConfig();fs.writeFileSync(env.configFilePath,JSON.stringify(config));await asyncSleep(1000);this.app=await env.getApp();",
              "err": {},
              "uuid": "a3933a42-3f2b-4fa4-81b9-42fa48efcd41",
              "parentUUID": "6b359f5b-5fa4-449e-a3ce-858d9514253a",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Menu/window_menu\"",
              "fullTitle": "Menu/window_menu \"after each\" hook in \"Menu/window_menu\"",
              "timedOut": false,
              "duration": 8287,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if(this.app){await this.app.close();}await env.clearElectronInstances();",
              "err": {},
              "uuid": "ca70b2e5-8bd3-4e78-b4d0-8f44837b8982",
              "parentUUID": "6b359f5b-5fa4-449e-a3ce-858d9514253a",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "MM-T826 should switch to servers when keyboard shortcuts are pressed",
              "fullTitle": "Menu/window_menu MM-T826 should switch to servers when keyboard shortcuts are pressed",
              "timedOut": false,
              "duration": 1207,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await env.getServerMap(this.app);const mainWindow=this.app.windows().find(window=>window.url().includes('index'));let dropdownButtonText=await mainWindow.innerText('.TeamDropdownButton');dropdownButtonText.should.equal('example');robot.keyTap('2',['control',process.platform==='darwin'?'command':'shift']);dropdownButtonText=await mainWindow.innerText('.TeamDropdownButton:has-text(\"github\")');dropdownButtonText.should.equal('github');robot.keyTap('3',['control',process.platform==='darwin'?'command':'shift']);dropdownButtonText=await mainWindow.innerText('.TeamDropdownButton:has-text(\"google\")');dropdownButtonText.should.equal('google');robot.keyTap('1',['control',process.platform==='darwin'?'command':'shift']);dropdownButtonText=await mainWindow.innerText('.TeamDropdownButton:has-text(\"example\")');dropdownButtonText.should.equal('example');",
              "err": {},
              "uuid": "b1c570c6-e10b-4cd1-be40-f859c8f18b06",
              "parentUUID": "6b359f5b-5fa4-449e-a3ce-858d9514253a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MM-T4385 select tab from menu",
              "fullTitle": "Menu/window_menu MM-T4385 select tab from menu",
              "timedOut": false,
              "duration": 852,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const mainView=this.app.windows().find(window=>window.url().includes('index'));let tabViewButton=await mainView.innerText('.active');tabViewButton.should.equal('Channels');robot.keyTap('2',[env.cmdOrCtrl]);tabViewButton=await mainView.innerText('.active');tabViewButton.should.equal('Boards');robot.keyTap('3',[env.cmdOrCtrl]);tabViewButton=await mainView.innerText('.active');tabViewButton.should.equal('Playbooks');robot.keyTap('1',[env.cmdOrCtrl]);tabViewButton=await mainView.innerText('.active');tabViewButton.should.equal('Channels');",
              "err": {},
              "uuid": "8e1b4eb1-d2d9-4aa1-98d9-097c7d625386",
              "parentUUID": "6b359f5b-5fa4-449e-a3ce-858d9514253a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MM-T827 select next/previous tab",
              "fullTitle": "Menu/window_menu MM-T827 select next/previous tab",
              "timedOut": false,
              "duration": 649,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const mainView=this.app.windows().find(window=>window.url().includes('index'));let tabViewButton=await mainView.innerText('.active');tabViewButton.should.equal('Channels');robot.keyTap('tab',['control']);tabViewButton=await mainView.innerText('.active');tabViewButton.should.equal('Boards');robot.keyTap('tab',['shift','control']);tabViewButton=await mainView.innerText('.active');tabViewButton.should.equal('Channels');",
              "err": {},
              "uuid": "e9ec70f4-6b0e-495a-a702-f3bede195f4f",
              "parentUUID": "6b359f5b-5fa4-449e-a3ce-858d9514253a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MM-T824 should be minimized when keyboard shortcuts are pressed",
              "fullTitle": "Menu/window_menu MM-T824 should be minimized when keyboard shortcuts are pressed",
              "timedOut": false,
              "duration": 2604,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const mainWindow=this.app.windows().find(window=>window.url().includes('index'));const browserWindow=await this.app.browserWindow(mainWindow);if(process.platform==='darwin'){robot.keyTap('m',[env.cmdOrCtrl]);}else{await mainWindow.click('button.three-dot-menu');robot.keyTap('w');robot.keyTap('m');robot.keyTap('enter');}await asyncSleep(2000);const isMinimized=await browserWindow.evaluate(window=>window.isMinimized());isMinimized.should.be.true;",
              "err": {},
              "uuid": "f00ad56f-3127-48db-a51e-037dce636ff0",
              "parentUUID": "6b359f5b-5fa4-449e-a3ce-858d9514253a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MM-T825 should be hidden when keyboard shortcuts are pressed",
              "fullTitle": "Menu/window_menu MM-T825 should be hidden when keyboard shortcuts are pressed",
              "timedOut": false,
              "duration": 2297,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const mainWindow=this.app.windows().find(window=>window.url().includes('index'));const browserWindow=await this.app.browserWindow(mainWindow);robot.keyTap('w',[env.cmdOrCtrl]);await asyncSleep(2000);const isVisible=await browserWindow.evaluate(window=>window.isVisible());isVisible.should.be.false;const isDestroyed=await browserWindow.evaluate(window=>window.isDestroyed());isDestroyed.should.be.false;",
              "err": {},
              "uuid": "a6445419-b6d0-45c2-ba7f-469fe83dbd08",
              "parentUUID": "6b359f5b-5fa4-449e-a3ce-858d9514253a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b1c570c6-e10b-4cd1-be40-f859c8f18b06",
            "8e1b4eb1-d2d9-4aa1-98d9-097c7d625386",
            "e9ec70f4-6b0e-495a-a702-f3bede195f4f",
            "f00ad56f-3127-48db-a51e-037dce636ff0",
            "a6445419-b6d0-45c2-ba7f-469fe83dbd08"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7609,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "6e8e650f-0ab8-4bc4-8e82-9490f588635b",
          "title": "popup",
          "fullFile": "G:\\Workspace\\mattermost\\desktop\\dist\\tests\\e2e_bundle.js",
          "file": "\\dist\\tests\\e2e_bundle.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"popup\"",
              "fullTitle": "popup \"before each\" hook in \"popup\"",
              "timedOut": false,
              "duration": 4474,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "env.cleanDataDir();env.createTestUserDataDir();env.cleanTestConfig();fs.writeFileSync(env.configFilePath,JSON.stringify(config));await asyncSleep(1000);this.app=await env.getApp();this.serverMap=await env.getServerMap(this.app);",
              "err": {},
              "uuid": "38e441a5-c8b2-4cff-ab81-0f0a9bdaba30",
              "parentUUID": "6e8e650f-0ab8-4bc4-8e82-9490f588635b",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"popup\"",
              "fullTitle": "popup \"after each\" hook in \"popup\"",
              "timedOut": false,
              "duration": 8518,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if(this.app){await this.app.close();}await env.clearElectronInstances();",
              "err": {},
              "uuid": "1a264c0b-01d0-42bb-a5c0-30028d0a4ae2",
              "parentUUID": "6e8e650f-0ab8-4bc4-8e82-9490f588635b",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "MM-T1659 should not be able to go Back or Forward in the popup window",
              "fullTitle": "popup MM-T1659 should not be able to go Back or Forward in the popup window",
              "timedOut": false,
              "duration": 9345,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const loadingScreen=this.app.windows().find(window=>window.url().includes('loadingScreen'));await loadingScreen.waitForSelector('.LoadingScreen',{state:'hidden'});const firstServer=this.serverMap[`${config.teams[0].name}___TAB_MESSAGING`].win;await env.loginToMattermost(firstServer);await firstServer.waitForSelector('#sidebarItem_suscipit-4');await firstServer.click('#sidebarItem_suscipit-4');await firstServer.click('#post_textbox');await firstServer.type('#post_textbox','/github connect');await firstServer.press('#post_textbox','Enter');const githubLink=await firstServer.waitForSelector('a.theme.markdown__link:has-text(\"GitHub account\")');githubLink.click();const popupWindow=await this.app.waitForEvent('window');popupWindow.focus();const currentURL=popupWindow.url();// Try and go back\nif(process.platform==='darwin'){robot.keyTap('[',['command']);}else{robot.keyTap('left',['alt']);}popupWindow.url().should.equal(currentURL);// Try and go forward\nif(process.platform==='darwin'){robot.keyTap(']',['command']);}else{robot.keyTap('right',['alt']);}popupWindow.url().should.equal(currentURL);",
              "err": {},
              "uuid": "b7cc0d38-6be4-4ba3-9c7f-10ded02900cd",
              "parentUUID": "6e8e650f-0ab8-4bc4-8e82-9490f588635b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "688f2ca6-cab2-457d-a36d-7e6705674f9a",
              "title": "MM-T2827 Keyboard shortcuts in popup windows",
              "fullFile": "G:\\Workspace\\mattermost\\desktop\\dist\\tests\\e2e_bundle.js",
              "file": "\\dist\\tests\\e2e_bundle.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"MM-T2827 Keyboard shortcuts in popup windows\"",
                  "fullTitle": "popup MM-T2827 Keyboard shortcuts in popup windows \"before each\" hook in \"MM-T2827 Keyboard shortcuts in popup windows\"",
                  "timedOut": false,
                  "duration": 7712,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const loadingScreen=this.app.windows().find(window=>window.url().includes('loadingScreen'));await loadingScreen.waitForSelector('.LoadingScreen',{state:'hidden'});const firstServer=this.serverMap[`${config.teams[0].name}___TAB_MESSAGING`].win;await env.loginToMattermost(firstServer);await firstServer.waitForSelector('#sidebarItem_suscipit-4');await firstServer.click('#sidebarItem_suscipit-4');await firstServer.click('#post_textbox');await firstServer.type('#post_textbox','/github connect');await firstServer.press('#post_textbox','Enter');const githubLink=await firstServer.waitForSelector('a.theme.markdown__link:has-text(\"GitHub account\")');githubLink.click();popupWindow=await this.app.waitForEvent('window');const loginField=await popupWindow.waitForSelector('#login_field');await loginField.focus();await loginField.type('mattermost');",
                  "err": {},
                  "uuid": "7d39f7b4-06dc-4fad-b93f-5ed6937b17fe",
                  "parentUUID": "688f2ca6-cab2-457d-a36d-7e6705674f9a",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "MM-T2827_1 should be able to select all in popup windows",
                  "fullTitle": "popup MM-T2827 Keyboard shortcuts in popup windows MM-T2827_1 should be able to select all in popup windows",
                  "timedOut": false,
                  "duration": 274,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "robot.keyTap('a',[process.platform==='darwin'?'command':'control']);const selectedText=await popupWindow.evaluate(()=>{const box=document.querySelectorAll('#login_field')[0];return box.value.substring(box.selectionStart,box.selectionEnd);});selectedText.should.equal('mattermost');",
                  "err": {},
                  "uuid": "74cf6bc5-2934-4897-8dc5-a88540ac3eeb",
                  "parentUUID": "688f2ca6-cab2-457d-a36d-7e6705674f9a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "MM-T2827_2 should be able to cut and paste in popup windows",
                  "fullTitle": "popup MM-T2827 Keyboard shortcuts in popup windows MM-T2827_2 should be able to cut and paste in popup windows",
                  "timedOut": false,
                  "duration": 603,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const textbox=await popupWindow.waitForSelector('#login_field');await textbox.selectText({force:true});robot.keyTap('x',[process.platform==='darwin'?'command':'control']);let textValue=await textbox.inputValue();textValue.should.equal('');await textbox.focus();robot.keyTap('v',[process.platform==='darwin'?'command':'control']);textValue=await textbox.inputValue();textValue.should.equal('mattermost');",
                  "err": {},
                  "uuid": "6a82722d-81cb-4a31-afae-0ed61cdf3c9b",
                  "parentUUID": "688f2ca6-cab2-457d-a36d-7e6705674f9a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "MM-T2827_3 should be able to copy and paste in popup windows",
                  "fullTitle": "popup MM-T2827 Keyboard shortcuts in popup windows MM-T2827_3 should be able to copy and paste in popup windows",
                  "timedOut": false,
                  "duration": 705,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const textbox=await popupWindow.waitForSelector('#login_field');await textbox.selectText({force:true});robot.keyTap('c',[process.platform==='darwin'?'command':'control']);await textbox.focus();await textbox.type('other-text');robot.keyTap('v',[process.platform==='darwin'?'command':'control']);const textValue=await textbox.inputValue();textValue.should.equal('other-textmattermost');",
                  "err": {},
                  "uuid": "d875df53-6653-41ce-ae30-c72c7305ae93",
                  "parentUUID": "688f2ca6-cab2-457d-a36d-7e6705674f9a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "74cf6bc5-2934-4897-8dc5-a88540ac3eeb",
                "6a82722d-81cb-4a31-afae-0ed61cdf3c9b",
                "d875df53-6653-41ce-ae30-c72c7305ae93"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1582,
              "root": false,
              "rootEmpty": false,
              "_timeout": 40000
            }
          ],
          "passes": [
            "b7cc0d38-6be4-4ba3-9c7f-10ded02900cd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9345,
          "root": false,
          "rootEmpty": false,
          "_timeout": 40000
        },
        {
          "uuid": "f903558d-1571-471a-af4f-6e5336125b0f",
          "title": "copylink",
          "fullFile": "G:\\Workspace\\mattermost\\desktop\\dist\\tests\\e2e_bundle.js",
          "file": "\\dist\\tests\\e2e_bundle.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"copylink\"",
              "fullTitle": "copylink \"before each\" hook in \"copylink\"",
              "timedOut": false,
              "duration": 4497,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "env.cleanDataDir();env.createTestUserDataDir();env.cleanTestConfig();fs.writeFileSync(env.configFilePath,JSON.stringify(config));await asyncSleep(1000);this.app=await env.getApp();this.serverMap=await env.getServerMap(this.app);",
              "err": {},
              "uuid": "429c0998-cc24-4878-b9f6-5f7e3966c6a8",
              "parentUUID": "f903558d-1571-471a-af4f-6e5336125b0f",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"copylink\"",
              "fullTitle": "copylink \"after each\" hook in \"copylink\"",
              "timedOut": false,
              "duration": 8276,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if(this.app){await this.app.close();}await env.clearElectronInstances();",
              "err": {},
              "uuid": "7eb73dde-c270-4c0f-b287-e71353356fcd",
              "parentUUID": "f903558d-1571-471a-af4f-6e5336125b0f",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "MM-T1308 Check that external links dont open in the app",
              "fullTitle": "copylink MM-T1308 Check that external links dont open in the app",
              "timedOut": false,
              "duration": 7265,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const loadingScreen=this.app.windows().find(window=>window.url().includes('loadingScreen'));await loadingScreen.waitForSelector('.LoadingScreen',{state:'hidden'});const firstServer=this.serverMap[`${config.teams[0].name}___TAB_MESSAGING`].win;await env.loginToMattermost(firstServer);await firstServer.waitForSelector('#sidebarItem_suscipit-4');await firstServer.click('#sidebarItem_suscipit-4');await firstServer.click('#post_textbox');await firstServer.fill('#post_textbox','https://electronjs.org/apps/mattermost');await firstServer.press('#post_textbox','Enter');const newPageWindow=this.app.windows().find(window=>window.url().includes('apps/mattermost'));expect(newPageWindow===undefined);",
              "err": {},
              "uuid": "b607007f-e2c0-4fad-8741-5f573a775b16",
              "parentUUID": "f903558d-1571-471a-af4f-6e5336125b0f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b607007f-e2c0-4fad-8741-5f573a775b16"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7265,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "c761226f-28b6-4135-b0dd-0b949b044735",
          "title": "Add Server Modal",
          "fullFile": "G:\\Workspace\\mattermost\\desktop\\dist\\tests\\e2e_bundle.js",
          "file": "\\dist\\tests\\e2e_bundle.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Add Server Modal\"",
              "fullTitle": "Add Server Modal \"before each\" hook in \"Add Server Modal\"",
              "timedOut": false,
              "duration": 4362,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "env.createTestUserDataDir();env.cleanTestConfig();fs.writeFileSync(env.configFilePath,JSON.stringify(config));await asyncSleep(1000);this.app=await env.getApp();const mainView=this.app.windows().find(window=>window.url().includes('index'));const dropdownView=this.app.windows().find(window=>window.url().includes('dropdown'));await mainView.click('.TeamDropdownButton');await dropdownView.click('.TeamDropdown .TeamDropdown__button.addServer');newServerView=await this.app.waitForEvent('window',{predicate:window=>window.url().includes('newServer')});// wait for autofocus to finish\nawait asyncSleep(500);",
              "err": {},
              "uuid": "749d51e8-11d9-4376-b574-f89cc5ee0a62",
              "parentUUID": "c761226f-28b6-4135-b0dd-0b949b044735",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Add Server Modal\"",
              "fullTitle": "Add Server Modal \"after each\" hook in \"Add Server Modal\"",
              "timedOut": false,
              "duration": 7923,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if(this.app){await this.app.close();}await env.clearElectronInstances();",
              "err": {},
              "uuid": "3e354b3b-5736-40b9-94de-fbbdfee71966",
              "parentUUID": "c761226f-28b6-4135-b0dd-0b949b044735",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "MM-T1312 should focus the first text input",
              "fullTitle": "Add Server Modal MM-T1312 should focus the first text input",
              "timedOut": false,
              "duration": 24,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const isFocused=await newServerView.$eval('#teamNameInput',el=>el===document.activeElement);isFocused.should.be.true;",
              "err": {},
              "uuid": "5b8261fd-016d-49b3-b4a6-8f39042b170e",
              "parentUUID": "c761226f-28b6-4135-b0dd-0b949b044735",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MM-T4388 should close the window after clicking cancel",
              "fullTitle": "Add Server Modal MM-T4388 should close the window after clicking cancel",
              "timedOut": false,
              "duration": 1061,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await newServerView.click('#cancelNewServerModal');await asyncSleep(1000);const existing=Boolean(await this.app.windows().find(window=>window.url().includes('newServer')));existing.should.be.false;",
              "err": {},
              "uuid": "49e50982-842b-47ac-b706-ff2719a3fd82",
              "parentUUID": "c761226f-28b6-4135-b0dd-0b949b044735",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MM-T2826_1 should not be valid if an invalid server address has been set",
              "fullTitle": "Add Server Modal MM-T2826_1 should not be valid if an invalid server address has been set",
              "timedOut": false,
              "duration": 183,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await newServerView.type('#teamUrlInput','superInvalid url');await newServerView.click('#saveNewServerModal');const existing=await newServerView.isVisible('#teamUrlInput.is-invalid');existing.should.be.true;",
              "err": {},
              "uuid": "2fec2fac-fc92-4a50-b7c3-045e0e6b2f40",
              "parentUUID": "c761226f-28b6-4135-b0dd-0b949b044735",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "fe23328b-deb9-40f3-a9d6-be47da17903a",
              "title": "MM-T4389 Invalid messages",
              "fullFile": "G:\\Workspace\\mattermost\\desktop\\dist\\tests\\e2e_bundle.js",
              "file": "\\dist\\tests\\e2e_bundle.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "MM-T4389_1 should not be valid if no team name has been set",
                  "fullTitle": "Add Server Modal MM-T4389 Invalid messages MM-T4389_1 should not be valid if no team name has been set",
                  "timedOut": false,
                  "duration": 87,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await newServerView.click('#saveNewServerModal');const existing=await newServerView.isVisible('#teamNameInput.is-invalid');existing.should.be.true;",
                  "err": {},
                  "uuid": "4047a07b-a829-49c4-8cbf-e987732a2bec",
                  "parentUUID": "fe23328b-deb9-40f3-a9d6-be47da17903a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "MM-T4389_2 should not be valid if no server address has been set",
                  "fullTitle": "Add Server Modal MM-T4389 Invalid messages MM-T4389_2 should not be valid if no server address has been set",
                  "timedOut": false,
                  "duration": 79,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await newServerView.click('#saveNewServerModal');const existing=await newServerView.isVisible('#teamUrlInput.is-invalid');existing.should.be.true;",
                  "err": {},
                  "uuid": "c85eaea8-c9c2-461c-a138-22f7bea64720",
                  "parentUUID": "fe23328b-deb9-40f3-a9d6-be47da17903a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not be valid if a server with the same name exists",
                  "fullTitle": "Add Server Modal MM-T4389 Invalid messages should not be valid if a server with the same name exists",
                  "timedOut": false,
                  "duration": 228,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await newServerView.type('#teamNameInput',config.teams[0].name);await newServerView.type('#teamUrlInput','http://example.org');await newServerView.click('#saveNewServerModal');const existing=await newServerView.isVisible('#teamNameInput.is-invalid');existing.should.be.true;",
                  "err": {},
                  "uuid": "42208d45-06d8-4c21-b686-ae630b885789",
                  "parentUUID": "fe23328b-deb9-40f3-a9d6-be47da17903a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not be valid if a server with the same URL exists",
                  "fullTitle": "Add Server Modal MM-T4389 Invalid messages should not be valid if a server with the same URL exists",
                  "timedOut": false,
                  "duration": 276,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await newServerView.type('#teamNameInput','some-new-server');await newServerView.type('#teamUrlInput',config.teams[0].url);await newServerView.click('#saveNewServerModal');const existing=await newServerView.isVisible('#teamUrlInput.is-invalid');existing.should.be.true;",
                  "err": {},
                  "uuid": "66d58278-b735-42f1-a204-a3b22791c338",
                  "parentUUID": "fe23328b-deb9-40f3-a9d6-be47da17903a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [
                {
                  "uuid": "28365967-8611-4e5d-80b2-d2ab0e86f824",
                  "title": "Valid server name",
                  "fullFile": "G:\\Workspace\\mattermost\\desktop\\dist\\tests\\e2e_bundle.js",
                  "file": "\\dist\\tests\\e2e_bundle.js",
                  "beforeHooks": [
                    {
                      "title": "\"before each\" hook in \"Valid server name\"",
                      "fullTitle": "Add Server Modal MM-T4389 Invalid messages Valid server name \"before each\" hook in \"Valid server name\"",
                      "timedOut": false,
                      "duration": 116,
                      "state": null,
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "await newServerView.type('#teamNameInput','TestTeam');await newServerView.click('#saveNewServerModal');",
                      "err": {},
                      "uuid": "7df92084-f1f5-4750-a86b-1b17112bfcab",
                      "parentUUID": "28365967-8611-4e5d-80b2-d2ab0e86f824",
                      "isHook": true,
                      "skipped": false
                    }
                  ],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "MM-T4389_3 should not be marked invalid",
                      "fullTitle": "Add Server Modal MM-T4389 Invalid messages Valid server name MM-T4389_3 should not be marked invalid",
                      "timedOut": false,
                      "duration": 3,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const existing=await newServerView.isVisible('#teamNameInput.is-invalid');existing.should.be.false;",
                      "err": {},
                      "uuid": "b5f8584b-ad5f-4aa7-8d26-584db5e2661b",
                      "parentUUID": "28365967-8611-4e5d-80b2-d2ab0e86f824",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "MM-T4389_4 should not be possible to click save",
                      "fullTitle": "Add Server Modal MM-T4389 Invalid messages Valid server name MM-T4389_4 should not be possible to click save",
                      "timedOut": false,
                      "duration": 11,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const disabled=await newServerView.getAttribute('#saveNewServerModal','disabled');(disabled==='').should.be.true;",
                      "err": {},
                      "uuid": "47414d70-9fa5-487b-bb59-a165987526c3",
                      "parentUUID": "28365967-8611-4e5d-80b2-d2ab0e86f824",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "b5f8584b-ad5f-4aa7-8d26-584db5e2661b",
                    "47414d70-9fa5-487b-bb59-a165987526c3"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 14,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 30000
                },
                {
                  "uuid": "1d5a74b7-f174-4d97-94db-620bf7489273",
                  "title": "Valid server url",
                  "fullFile": "G:\\Workspace\\mattermost\\desktop\\dist\\tests\\e2e_bundle.js",
                  "file": "\\dist\\tests\\e2e_bundle.js",
                  "beforeHooks": [
                    {
                      "title": "\"before each\" hook in \"Valid server url\"",
                      "fullTitle": "Add Server Modal MM-T4389 Invalid messages Valid server url \"before each\" hook in \"Valid server url\"",
                      "timedOut": false,
                      "duration": 158,
                      "state": null,
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "await newServerView.type('#teamUrlInput','http://example.org');await newServerView.click('#saveNewServerModal');",
                      "err": {},
                      "uuid": "071464d2-1e2f-4801-9c3c-08f873127d96",
                      "parentUUID": "1d5a74b7-f174-4d97-94db-620bf7489273",
                      "isHook": true,
                      "skipped": false
                    }
                  ],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "MM-T4389_5 should be valid",
                      "fullTitle": "Add Server Modal MM-T4389 Invalid messages Valid server url MM-T4389_5 should be valid",
                      "timedOut": false,
                      "duration": 3,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const existing=await newServerView.isVisible('#teamUrlInput.is-invalid');existing.should.be.false;",
                      "err": {},
                      "uuid": "c930090f-7bcb-4104-8afc-3df5782bf7a0",
                      "parentUUID": "1d5a74b7-f174-4d97-94db-620bf7489273",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "MM-T4389_6 should not be possible to click save",
                      "fullTitle": "Add Server Modal MM-T4389 Invalid messages Valid server url MM-T4389_6 should not be possible to click save",
                      "timedOut": false,
                      "duration": 11,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const disabled=await newServerView.getAttribute('#saveNewServerModal','disabled');(disabled==='').should.be.true;",
                      "err": {},
                      "uuid": "442de77b-63f0-47f3-8835-f39a8247dddf",
                      "parentUUID": "1d5a74b7-f174-4d97-94db-620bf7489273",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "c930090f-7bcb-4104-8afc-3df5782bf7a0",
                    "442de77b-63f0-47f3-8835-f39a8247dddf"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 14,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 30000
                }
              ],
              "passes": [
                "4047a07b-a829-49c4-8cbf-e987732a2bec",
                "c85eaea8-c9c2-461c-a138-22f7bea64720",
                "42208d45-06d8-4c21-b686-ae630b885789",
                "66d58278-b735-42f1-a204-a3b22791c338"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 670,
              "root": false,
              "rootEmpty": false,
              "_timeout": 30000
            },
            {
              "uuid": "22a92025-d1b8-42c7-ab13-88d486207aa8",
              "title": "Valid Team Settings",
              "fullFile": "G:\\Workspace\\mattermost\\desktop\\dist\\tests\\e2e_bundle.js",
              "file": "\\dist\\tests\\e2e_bundle.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"Valid Team Settings\"",
                  "fullTitle": "Add Server Modal Valid Team Settings \"before each\" hook in \"Valid Team Settings\"",
                  "timedOut": false,
                  "duration": 162,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await newServerView.type('#teamUrlInput','http://example.org');await newServerView.type('#teamNameInput','TestTeam');",
                  "err": {},
                  "uuid": "6aff30d5-d054-4a67-a522-77e8f7ee8cd1",
                  "parentUUID": "22a92025-d1b8-42c7-ab13-88d486207aa8",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should be possible to click add",
                  "fullTitle": "Add Server Modal Valid Team Settings should be possible to click add",
                  "timedOut": false,
                  "duration": 7,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const disabled=await newServerView.getAttribute('#saveNewServerModal','disabled');(disabled===null).should.be.true;",
                  "err": {},
                  "uuid": "167a2673-4a4f-4739-82fa-9c14f1c1594d",
                  "parentUUID": "22a92025-d1b8-42c7-ab13-88d486207aa8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "MM-T2826_2 should add the team to the config file",
                  "fullTitle": "Add Server Modal Valid Team Settings MM-T2826_2 should add the team to the config file",
                  "timedOut": false,
                  "duration": 1050,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await newServerView.click('#saveNewServerModal');await asyncSleep(1000);const existing=Boolean(await this.app.windows().find(window=>window.url().includes('newServer')));existing.should.be.false;const savedConfig=JSON.parse(fs.readFileSync(env.configFilePath,'utf8'));savedConfig.teams.should.deep.contain({name:'TestTeam',url:'http://example.org',order:2,tabs:[{name:'TAB_MESSAGING',order:0,isOpen:true},{name:'TAB_FOCALBOARD',order:1},{name:'TAB_PLAYBOOKS',order:2}]});",
                  "err": {},
                  "uuid": "af716526-032f-4d72-b3b6-ff63dbd05447",
                  "parentUUID": "22a92025-d1b8-42c7-ab13-88d486207aa8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "167a2673-4a4f-4739-82fa-9c14f1c1594d",
                "af716526-032f-4d72-b3b6-ff63dbd05447"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1057,
              "root": false,
              "rootEmpty": false,
              "_timeout": 30000
            }
          ],
          "passes": [
            "5b8261fd-016d-49b3-b4a6-8f39042b170e",
            "49e50982-842b-47ac-b706-ff2719a3fd82",
            "2fec2fac-fc92-4a50-b7c3-045e0e6b2f40"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1268,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "599615a9-778e-4c1d-84e7-38ab8f42e84d",
          "title": "server_management/drag_and_drop",
          "fullFile": "G:\\Workspace\\mattermost\\desktop\\dist\\tests\\e2e_bundle.js",
          "file": "\\dist\\tests\\e2e_bundle.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"server_management/drag_and_drop\"",
              "fullTitle": "server_management/drag_and_drop \"before each\" hook in \"server_management/drag_and_drop\"",
              "timedOut": false,
              "duration": 3641,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "env.createTestUserDataDir();env.cleanTestConfig();fs.writeFileSync(env.configFilePath,JSON.stringify(config));await asyncSleep(1000);this.app=await env.getApp();",
              "err": {},
              "uuid": "f8f3c72b-5c46-40d0-a177-3fa6e84a3000",
              "parentUUID": "599615a9-778e-4c1d-84e7-38ab8f42e84d",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"server_management/drag_and_drop\"",
              "fullTitle": "server_management/drag_and_drop \"after each\" hook in \"server_management/drag_and_drop\"",
              "timedOut": false,
              "duration": 7799,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if(this.app){await this.app.close();}await env.clearElectronInstances();",
              "err": {},
              "uuid": "9b006067-8de2-4386-a695-06e6d095d64b",
              "parentUUID": "599615a9-778e-4c1d-84e7-38ab8f42e84d",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "MM-T2634 should be able to drag and drop servers in the dropdown menu",
              "fullTitle": "server_management/drag_and_drop MM-T2634 should be able to drag and drop servers in the dropdown menu",
              "timedOut": false,
              "duration": 1253,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const mainWindow=this.app.windows().find(window=>window.url().includes('index'));const dropdownView=this.app.windows().find(window=>window.url().includes('dropdown'));await mainWindow.click('.TeamDropdownButton');// Verify the original order\nlet firstMenuItem=await dropdownView.waitForSelector('.TeamDropdown button.TeamDropdown__button:nth-child(1) .TeamDropdown__draggable-handle');let firstMenuItemText=await firstMenuItem.innerText();firstMenuItemText.should.equal('example');let secondMenuItem=await dropdownView.waitForSelector('.TeamDropdown button.TeamDropdown__button:nth-child(2) .TeamDropdown__draggable-handle');let secondMenuItemText=await secondMenuItem.innerText();secondMenuItemText.should.equal('github');let thirdMenuItem=await dropdownView.waitForSelector('.TeamDropdown button.TeamDropdown__button:nth-child(3) .TeamDropdown__draggable-handle');let thirdMenuItemText=await thirdMenuItem.innerText();thirdMenuItemText.should.equal('google');// Move the first server down, then re-open the dropdown\nawait firstMenuItem.focus();await dropdownView.keyboard.down(' ');await dropdownView.keyboard.down('ArrowDown');await dropdownView.keyboard.down(' ');await asyncSleep(1000);await mainWindow.keyboard.press('Escape');await mainWindow.click('.TeamDropdownButton');// Verify that the new order persists\nfirstMenuItem=await dropdownView.waitForSelector('.TeamDropdown button.TeamDropdown__button:nth-child(1) .TeamDropdown__draggable-handle');firstMenuItemText=await firstMenuItem.innerText();firstMenuItemText.should.equal('github');secondMenuItem=await dropdownView.waitForSelector('.TeamDropdown button.TeamDropdown__button:nth-child(2) .TeamDropdown__draggable-handle');secondMenuItemText=await secondMenuItem.innerText();secondMenuItemText.should.equal('example');thirdMenuItem=await dropdownView.waitForSelector('.TeamDropdown button.TeamDropdown__button:nth-child(3) .TeamDropdown__draggable-handle');thirdMenuItemText=await thirdMenuItem.innerText();thirdMenuItemText.should.equal('google');// Verify config is updated\nconst newConfig=JSON.parse(fs.readFileSync(env.configFilePath,'utf-8'));const order0=newConfig.teams.find(team=>team.name==='github');order0.order.should.equal(0);const order1=newConfig.teams.find(team=>team.name==='example');order1.order.should.equal(1);const order2=newConfig.teams.find(team=>team.name==='google');order2.order.should.equal(2);",
              "err": {},
              "uuid": "af91011c-d392-4e66-b11e-526293acae97",
              "parentUUID": "599615a9-778e-4c1d-84e7-38ab8f42e84d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MM-T2635 should be able to drag and drop tabs",
              "fullTitle": "server_management/drag_and_drop MM-T2635 should be able to drag and drop tabs",
              "timedOut": false,
              "duration": 1166,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const mainWindow=this.app.windows().find(window=>window.url().includes('index'));// Verify the original order\nlet firstTab=await mainWindow.waitForSelector('.TabBar li.teamTabItem:nth-child(1)');let firstTabText=await firstTab.innerText();firstTabText.should.equal('Channels');let secondTab=await mainWindow.waitForSelector('.TabBar li.teamTabItem:nth-child(2)');let secondTabText=await secondTab.innerText();secondTabText.should.equal('Boards');let thirdTab=await mainWindow.waitForSelector('.TabBar li.teamTabItem:nth-child(3)');let thirdTabText=await thirdTab.innerText();thirdTabText.should.equal('Playbooks');// Move the first tab to the right\nawait firstTab.focus();await mainWindow.keyboard.down(' ');await mainWindow.keyboard.down('ArrowRight');await mainWindow.keyboard.down(' ');await asyncSleep(1000);// Verify that the new order is visible\nfirstTab=await mainWindow.waitForSelector('.TabBar li.teamTabItem:nth-child(1)');firstTabText=await firstTab.innerText();firstTabText.should.equal('Boards');secondTab=await mainWindow.waitForSelector('.TabBar li.teamTabItem:nth-child(2)');secondTabText=await secondTab.innerText();secondTabText.should.equal('Channels');thirdTab=await mainWindow.waitForSelector('.TabBar li.teamTabItem:nth-child(3)');thirdTabText=await thirdTab.innerText();thirdTabText.should.equal('Playbooks');// Verify config is updated\nconst newConfig=JSON.parse(fs.readFileSync(env.configFilePath,'utf-8'));const firstTeam=newConfig.teams.find(team=>team.name==='example');const order0=firstTeam.tabs.find(tab=>tab.name==='TAB_FOCALBOARD');order0.order.should.equal(0);const order1=firstTeam.tabs.find(tab=>tab.name==='TAB_MESSAGING');order1.order.should.equal(1);const order2=firstTeam.tabs.find(tab=>tab.name==='TAB_PLAYBOOKS');order2.order.should.equal(2);",
              "err": {},
              "uuid": "c4e9f977-2036-4af9-a13c-54c1386ea5bf",
              "parentUUID": "599615a9-778e-4c1d-84e7-38ab8f42e84d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "af91011c-d392-4e66-b11e-526293acae97",
            "c4e9f977-2036-4af9-a13c-54c1386ea5bf"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2419,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "5784efc0-26ec-4cea-b16d-211a8055ca4b",
          "title": "EditServerModal",
          "fullFile": "G:\\Workspace\\mattermost\\desktop\\dist\\tests\\e2e_bundle.js",
          "file": "\\dist\\tests\\e2e_bundle.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"EditServerModal\"",
              "fullTitle": "EditServerModal \"before each\" hook in \"EditServerModal\"",
              "timedOut": false,
              "duration": 3861,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "env.createTestUserDataDir();env.cleanTestConfig();fs.writeFileSync(env.configFilePath,JSON.stringify(config));await asyncSleep(1000);this.app=await env.getApp();const mainView=this.app.windows().find(window=>window.url().includes('index'));const dropdownView=this.app.windows().find(window=>window.url().includes('dropdown'));await mainView.click('.TeamDropdownButton');await dropdownView.hover('.TeamDropdown .TeamDropdown__button:nth-child(1)');await dropdownView.click('.TeamDropdown .TeamDropdown__button:nth-child(1) button.TeamDropdown__button-edit');editServerView=await this.app.waitForEvent('window',{predicate:window=>window.url().includes('editServer')});",
              "err": {},
              "uuid": "320c06aa-f971-4b88-a298-89e845fe268a",
              "parentUUID": "5784efc0-26ec-4cea-b16d-211a8055ca4b",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"EditServerModal\"",
              "fullTitle": "EditServerModal \"after each\" hook in \"EditServerModal\"",
              "timedOut": false,
              "duration": 8030,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if(this.app){await this.app.close();}await env.clearElectronInstances();",
              "err": {},
              "uuid": "e3d2a5a1-313c-4ac5-85b8-235643cf6871",
              "parentUUID": "5784efc0-26ec-4cea-b16d-211a8055ca4b",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should not edit team when Cancel is pressed",
              "fullTitle": "EditServerModal should not edit team when Cancel is pressed",
              "timedOut": false,
              "duration": 1471,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await editServerView.click('#cancelNewServerModal');await asyncSleep(1000);const existing=Boolean(await this.app.windows().find(window=>window.url().includes('editServer')));existing.should.be.false;const savedConfig=JSON.parse(fs.readFileSync(env.configFilePath,'utf8'));savedConfig.teams.should.deep.contain({name:'example',url:env.exampleURL,order:0,tabs:[{name:'TAB_MESSAGING',order:0,isOpen:true},{name:'TAB_FOCALBOARD',order:1,isOpen:true},{name:'TAB_PLAYBOOKS',order:2,isOpen:true}],lastActiveTab:0});",
              "err": {},
              "uuid": "9e90c41c-4d66-429a-824f-5d353f2d202e",
              "parentUUID": "5784efc0-26ec-4cea-b16d-211a8055ca4b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MM-T4391_1 should not edit team when Save is pressed but nothing edited",
              "fullTitle": "EditServerModal MM-T4391_1 should not edit team when Save is pressed but nothing edited",
              "timedOut": false,
              "duration": 1466,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await editServerView.click('#saveNewServerModal');await asyncSleep(1000);const existing=Boolean(await this.app.windows().find(window=>window.url().includes('editServer')));existing.should.be.false;const savedConfig=JSON.parse(fs.readFileSync(env.configFilePath,'utf8'));savedConfig.teams.should.deep.contain({name:'example',url:env.exampleURL,order:0,tabs:[{name:'TAB_MESSAGING',order:0,isOpen:true},{name:'TAB_FOCALBOARD',order:1,isOpen:true},{name:'TAB_PLAYBOOKS',order:2,isOpen:true}],lastActiveTab:0});",
              "err": {},
              "uuid": "c2a4b9d2-d506-42c0-a92e-78be54395fa7",
              "parentUUID": "5784efc0-26ec-4cea-b16d-211a8055ca4b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MM-T2826_3 should not edit team if an invalid server address has been set",
              "fullTitle": "EditServerModal MM-T2826_3 should not edit team if an invalid server address has been set",
              "timedOut": false,
              "duration": 482,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await editServerView.type('#teamUrlInput','superInvalid url');await editServerView.click('#saveNewServerModal');const existing=await editServerView.isVisible('#teamUrlInput.is-invalid');existing.should.be.true;",
              "err": {},
              "uuid": "8b60bd02-cff8-4644-9b61-7b7d4a5c395c",
              "parentUUID": "5784efc0-26ec-4cea-b16d-211a8055ca4b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not edit team if another server with the same name or URL exists",
              "fullTitle": "EditServerModal should not edit team if another server with the same name or URL exists",
              "timedOut": false,
              "duration": 549,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await editServerView.fill('#teamNameInput',config.teams[1].name);await editServerView.click('#saveNewServerModal');let existing=await editServerView.isVisible('#teamNameInput.is-invalid');existing.should.be.true;await editServerView.fill('#teamNameInput','NewTestTeam');await editServerView.fill('#teamUrlInput',config.teams[1].url);existing=await editServerView.isVisible('#teamUrlInput.is-invalid');existing.should.be.true;",
              "err": {},
              "uuid": "3501b0c5-dff0-41bf-9a04-5d89396e7727",
              "parentUUID": "5784efc0-26ec-4cea-b16d-211a8055ca4b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MM-T4391_2 should edit team when Save is pressed and name edited",
              "fullTitle": "EditServerModal MM-T4391_2 should edit team when Save is pressed and name edited",
              "timedOut": false,
              "duration": 1480,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await editServerView.fill('#teamNameInput','NewTestTeam');await editServerView.click('#saveNewServerModal');await asyncSleep(1000);const existing=Boolean(await this.app.windows().find(window=>window.url().includes('editServer')));existing.should.be.false;const savedConfig=JSON.parse(fs.readFileSync(env.configFilePath,'utf8'));savedConfig.teams.should.not.deep.contain({name:'example',url:env.exampleURL,order:0,tabs:[{name:'TAB_MESSAGING',order:0,isOpen:true},{name:'TAB_FOCALBOARD',order:1,isOpen:true},{name:'TAB_PLAYBOOKS',order:2,isOpen:true}],lastActiveTab:0});savedConfig.teams.should.deep.contain({name:'NewTestTeam',url:env.exampleURL,order:0,tabs:[{name:'TAB_MESSAGING',order:0,isOpen:true},{name:'TAB_FOCALBOARD',order:1,isOpen:true},{name:'TAB_PLAYBOOKS',order:2,isOpen:true}],lastActiveTab:0});",
              "err": {},
              "uuid": "c561870c-536b-4647-9a19-3c16156a0090",
              "parentUUID": "5784efc0-26ec-4cea-b16d-211a8055ca4b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MM-T4391_3 should edit team when Save is pressed and URL edited",
              "fullTitle": "EditServerModal MM-T4391_3 should edit team when Save is pressed and URL edited",
              "timedOut": false,
              "duration": 1472,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await editServerView.fill('#teamUrlInput','http://google.com');await editServerView.click('#saveNewServerModal');await asyncSleep(1000);const existing=Boolean(await this.app.windows().find(window=>window.url().includes('editServer')));existing.should.be.false;const savedConfig=JSON.parse(fs.readFileSync(env.configFilePath,'utf8'));savedConfig.teams.should.not.deep.contain({name:'example',url:env.exampleURL,order:0,tabs:[{name:'TAB_MESSAGING',order:0,isOpen:true},{name:'TAB_FOCALBOARD',order:1,isOpen:true},{name:'TAB_PLAYBOOKS',order:2,isOpen:true}],lastActiveTab:0});savedConfig.teams.should.deep.contain({name:'example',url:'http://google.com',order:0,tabs:[{name:'TAB_MESSAGING',order:0,isOpen:true},{name:'TAB_FOCALBOARD',order:1,isOpen:true},{name:'TAB_PLAYBOOKS',order:2,isOpen:true}],lastActiveTab:0});",
              "err": {},
              "uuid": "26873ac6-8f3e-40d8-9220-30d544e07b73",
              "parentUUID": "5784efc0-26ec-4cea-b16d-211a8055ca4b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MM-T4391_4 should edit team when Save is pressed and both edited",
              "fullTitle": "EditServerModal MM-T4391_4 should edit team when Save is pressed and both edited",
              "timedOut": false,
              "duration": 1465,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await editServerView.fill('#teamNameInput','NewTestTeam');await editServerView.fill('#teamUrlInput','http://google.com');await editServerView.click('#saveNewServerModal');await asyncSleep(1000);const existing=Boolean(await this.app.windows().find(window=>window.url().includes('editServer')));existing.should.be.false;const savedConfig=JSON.parse(fs.readFileSync(env.configFilePath,'utf8'));savedConfig.teams.should.not.deep.contain({name:'example',url:env.exampleURL,order:0,tabs:[{name:'TAB_MESSAGING',order:0,isOpen:true},{name:'TAB_FOCALBOARD',order:1,isOpen:true},{name:'TAB_PLAYBOOKS',order:2,isOpen:true}],lastActiveTab:0});savedConfig.teams.should.deep.contain({name:'NewTestTeam',url:'http://google.com',order:0,tabs:[{name:'TAB_MESSAGING',order:0,isOpen:true},{name:'TAB_FOCALBOARD',order:1,isOpen:true},{name:'TAB_PLAYBOOKS',order:2,isOpen:true}],lastActiveTab:0});",
              "err": {},
              "uuid": "cb145474-6a4b-4b83-8748-715d7ce2a56b",
              "parentUUID": "5784efc0-26ec-4cea-b16d-211a8055ca4b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9e90c41c-4d66-429a-824f-5d353f2d202e",
            "c2a4b9d2-d506-42c0-a92e-78be54395fa7",
            "8b60bd02-cff8-4644-9b61-7b7d4a5c395c",
            "3501b0c5-dff0-41bf-9a04-5d89396e7727",
            "c561870c-536b-4647-9a19-3c16156a0090",
            "26873ac6-8f3e-40d8-9220-30d544e07b73",
            "cb145474-6a4b-4b83-8748-715d7ce2a56b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8385,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "00742592-d483-4f56-9f69-0067e1ebbc0e",
          "title": "header",
          "fullFile": "G:\\Workspace\\mattermost\\desktop\\dist\\tests\\e2e_bundle.js",
          "file": "\\dist\\tests\\e2e_bundle.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"header\"",
              "fullTitle": "header \"before each\" hook in \"header\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "env.createTestUserDataDir();env.cleanTestConfig();",
              "err": {},
              "uuid": "79241fde-d384-41b5-a89c-281605a7006d",
              "parentUUID": "00742592-d483-4f56-9f69-0067e1ebbc0e",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"header\"",
              "fullTitle": "header \"after each\" hook in \"header\"",
              "timedOut": false,
              "duration": 7911,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if(this.app){try{await this.app.close();// eslint-disable-next-line no-empty\n}catch(err){}}await env.clearElectronInstances();",
              "err": {},
              "uuid": "f9e2fa51-4a1f-4c3a-9fed-3685f3478d68",
              "parentUUID": "00742592-d483-4f56-9f69-0067e1ebbc0e",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "MM-T2637 Double-Clicking on the header should minimize/maximize the app",
              "fullTitle": "header MM-T2637 Double-Clicking on the header should minimize/maximize the app",
              "timedOut": false,
              "duration": 4675,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const initialBounds={x:0,y:0,width:800,height:400,maximized:false};fs.writeFileSync(env.boundsInfoPath,JSON.stringify(initialBounds));this.app=await env.getApp();const mainWindow=await this.app.windows().find(window=>window.url().includes('index'));const browserWindow=await this.app.browserWindow(mainWindow);const header=await mainWindow.locator('div.topBar');const headerBounds=await header.boundingBox();await header.dblclick({position:{x:headerBounds.width/2,y:headerBounds.y/2}});await asyncSleep(1000);const isMaximized=await browserWindow.evaluate(window=>window.isMaximized());isMaximized.should.be.equal(true);const maximizedHeaderBounds=await header.boundingBox();await header.dblclick({position:{x:maximizedHeaderBounds.width/2,y:maximizedHeaderBounds.y/2}});await asyncSleep(1000);const revertedBounds=await browserWindow.evaluate(window=>window.getContentBounds());revertedBounds.height.should.be.equal(initialBounds.height);revertedBounds.width.should.be.equal(initialBounds.width);",
              "err": {},
              "uuid": "64095ece-cbf6-40a2-88eb-54403ebc7fa2",
              "parentUUID": "00742592-d483-4f56-9f69-0067e1ebbc0e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "64095ece-cbf6-40a2-88eb-54403ebc7fa2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4675,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "3e0fdd51-eca1-4bc3-b13c-ef6b0973651e",
          "title": "LongServerName",
          "fullFile": "G:\\Workspace\\mattermost\\desktop\\dist\\tests\\e2e_bundle.js",
          "file": "\\dist\\tests\\e2e_bundle.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"LongServerName\"",
              "fullTitle": "LongServerName \"before each\" hook in \"LongServerName\"",
              "timedOut": false,
              "duration": 4302,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "env.createTestUserDataDir();env.cleanTestConfig();fs.writeFileSync(env.configFilePath,JSON.stringify(config));await asyncSleep(1000);this.app=await env.getApp();const mainView=this.app.windows().find(window=>window.url().includes('index'));const dropdownView=this.app.windows().find(window=>window.url().includes('dropdown'));await mainView.click('.TeamDropdownButton');await dropdownView.click('.TeamDropdown .TeamDropdown__button.addServer');newServerView=await this.app.waitForEvent('window',{predicate:window=>window.url().includes('newServer')});// wait for autofocus to finish\nawait asyncSleep(500);",
              "err": {},
              "uuid": "fbabf8bb-e2ad-418d-b5dc-b3f52ed3cdd8",
              "parentUUID": "3e0fdd51-eca1-4bc3-b13c-ef6b0973651e",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"LongServerName\"",
              "fullTitle": "LongServerName \"after each\" hook in \"LongServerName\"",
              "timedOut": false,
              "duration": 7981,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if(this.app){await this.app.close();}await env.clearElectronInstances();",
              "err": {},
              "uuid": "f08ecb99-b8e0-4ed8-a495-44ea1f3dbfb3",
              "parentUUID": "3e0fdd51-eca1-4bc3-b13c-ef6b0973651e",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "451df271-f47e-426e-896b-6dc52fc43c7c",
              "title": "MM-T4050 Long server name",
              "fullFile": "G:\\Workspace\\mattermost\\desktop\\dist\\tests\\e2e_bundle.js",
              "file": "\\dist\\tests\\e2e_bundle.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"MM-T4050 Long server name\"",
                  "fullTitle": "LongServerName MM-T4050 Long server name \"before each\" hook in \"MM-T4050 Long server name\"",
                  "timedOut": false,
                  "duration": 590,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await newServerView.type('#teamNameInput',longServerName);await newServerView.type('#teamUrlInput',longServerUrl);await newServerView.click('#saveNewServerModal');",
                  "err": {},
                  "uuid": "5308ada5-bb66-4cad-ba45-30d71c3c736d",
                  "parentUUID": "451df271-f47e-426e-896b-6dc52fc43c7c",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "MM-T4050_1 should add new server tab",
                  "fullTitle": "LongServerName MM-T4050 Long server name MM-T4050_1 should add new server tab",
                  "timedOut": false,
                  "duration": 1001,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await asyncSleep(1000);const existing=Boolean(await this.app.windows().find(window=>window.url().includes('newServer')));existing.should.be.false;const mainView=this.app.windows().find(window=>window.url().includes('index'));const dropdownView=this.app.windows().find(window=>window.url().includes('dropdown'));const isServerTabExists=Boolean(await mainView.locator(`text=${longServerName}`));const isServerAddedDropdown=Boolean(await dropdownView.locator(`text=${longServerName}`));isServerTabExists.should.be.true;isServerAddedDropdown.should.be.true;",
                  "err": {},
                  "uuid": "b8131b7b-d073-44c0-87c5-46fda0a08779",
                  "parentUUID": "451df271-f47e-426e-896b-6dc52fc43c7c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "MM-T4050_2 should truncate server name",
                  "fullTitle": "LongServerName MM-T4050 Long server name MM-T4050_2 should truncate server name",
                  "timedOut": false,
                  "duration": 1023,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await asyncSleep(1000);const existing=Boolean(await this.app.windows().find(window=>window.url().includes('newServer')));existing.should.be.false;const mainView=this.app.windows().find(window=>window.url().includes('index'));const serverNameLocator=await mainView.locator(`text=${longServerName}`);const isTruncated=await serverNameLocator.evaluate(element=>{return element.offsetWidth<element.scrollWidth;});isTruncated.should.be.true;",
                  "err": {},
                  "uuid": "9e60a6d7-20ad-4bf6-b5cc-28afcf0c9797",
                  "parentUUID": "451df271-f47e-426e-896b-6dc52fc43c7c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "MM-T4050_3 should display server tab with max width of 400px",
                  "fullTitle": "LongServerName MM-T4050 Long server name MM-T4050_3 should display server tab with max width of 400px",
                  "timedOut": false,
                  "duration": 1028,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await asyncSleep(1000);const existing=Boolean(await this.app.windows().find(window=>window.url().includes('newServer')));existing.should.be.false;const mainView=this.app.windows().find(window=>window.url().includes('index'));const serverNameLocator=await mainView.locator('.TeamDropdownButton');const isWithinMaxWidth=await serverNameLocator.evaluate(element=>{const width=parseFloat(window.getComputedStyle(element).getPropertyValue('width'));return width<=400;});isWithinMaxWidth.should.be.true;",
                  "err": {},
                  "uuid": "c83ddf26-947d-4fd8-bc81-58eb6a2b91c0",
                  "parentUUID": "451df271-f47e-426e-896b-6dc52fc43c7c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b8131b7b-d073-44c0-87c5-46fda0a08779",
                "9e60a6d7-20ad-4bf6-b5cc-28afcf0c9797",
                "c83ddf26-947d-4fd8-bc81-58eb6a2b91c0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3052,
              "root": false,
              "rootEmpty": false,
              "_timeout": 30000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "5993d3d9-25a8-41b3-b238-89742cc2bd6c",
          "title": "RemoveServerModal",
          "fullFile": "G:\\Workspace\\mattermost\\desktop\\dist\\tests\\e2e_bundle.js",
          "file": "\\dist\\tests\\e2e_bundle.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"RemoveServerModal\"",
              "fullTitle": "RemoveServerModal \"before each\" hook in \"RemoveServerModal\"",
              "timedOut": false,
              "duration": 4386,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "env.createTestUserDataDir();env.cleanTestConfig();fs.writeFileSync(env.configFilePath,JSON.stringify(config));await asyncSleep(1000);this.app=await env.getApp();const mainView=this.app.windows().find(window=>window.url().includes('index'));const dropdownView=this.app.windows().find(window=>window.url().includes('dropdown'));await mainView.click('.TeamDropdownButton');await dropdownView.hover('.TeamDropdown .TeamDropdown__button:nth-child(1)');await dropdownView.click('.TeamDropdown .TeamDropdown__button:nth-child(1) button.TeamDropdown__button-remove');removeServerView=await this.app.waitForEvent('window',{predicate:window=>window.url().includes('removeServer')});// wait for autofocus to finish\nawait asyncSleep(500);",
              "err": {},
              "uuid": "8fb82e9b-d0e8-4099-8e95-2bb45882164f",
              "parentUUID": "5993d3d9-25a8-41b3-b238-89742cc2bd6c",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"RemoveServerModal\"",
              "fullTitle": "RemoveServerModal \"after each\" hook in \"RemoveServerModal\"",
              "timedOut": false,
              "duration": 8447,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if(this.app){await this.app.close();}await env.clearElectronInstances();",
              "err": {},
              "uuid": "a280fcd5-50ff-44bc-bab6-09e0047a349c",
              "parentUUID": "5993d3d9-25a8-41b3-b238-89742cc2bd6c",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "MM-T4390_1 should remove existing team on click Remove",
              "fullTitle": "RemoveServerModal MM-T4390_1 should remove existing team on click Remove",
              "timedOut": false,
              "duration": 1059,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await removeServerView.click('button:has-text(\"Remove\")');await asyncSleep(1000);const expectedConfig=JSON.parse(JSON.stringify(config.teams.slice(1)));expectedConfig.forEach(value=>{value.order--;});const savedConfig=JSON.parse(fs.readFileSync(env.configFilePath,'utf8'));savedConfig.teams.should.deep.equal(expectedConfig);",
              "err": {},
              "uuid": "f1cbd7bd-03c7-4d8d-b4e4-dd54b9c85326",
              "parentUUID": "5993d3d9-25a8-41b3-b238-89742cc2bd6c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MM-T4390_2 should NOT remove existing team on click Cancel",
              "fullTitle": "RemoveServerModal MM-T4390_2 should NOT remove existing team on click Cancel",
              "timedOut": false,
              "duration": 1063,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await removeServerView.click('button:has-text(\"Cancel\")');await asyncSleep(1000);const savedConfig=JSON.parse(fs.readFileSync(env.configFilePath,'utf8'));savedConfig.teams.should.deep.equal(config.teams);",
              "err": {},
              "uuid": "2bd76921-4bf9-4416-b68b-b04b8db4dd77",
              "parentUUID": "5993d3d9-25a8-41b3-b238-89742cc2bd6c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MM-T4390_3 should disappear on click Close",
              "fullTitle": "RemoveServerModal MM-T4390_3 should disappear on click Close",
              "timedOut": false,
              "duration": 1057,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await removeServerView.click('button.close');await asyncSleep(1000);const existing=Boolean(await this.app.windows().find(window=>window.url().includes('removeServer')));existing.should.be.false;",
              "err": {},
              "uuid": "055591d0-3b8a-428a-b720-c3c7dfc0fc62",
              "parentUUID": "5993d3d9-25a8-41b3-b238-89742cc2bd6c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MM-T4390_4 should disappear on click background",
              "fullTitle": "RemoveServerModal MM-T4390_4 should disappear on click background",
              "timedOut": false,
              "duration": 1053,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// ignore any target closed error\ntry{await removeServerView.click('.modal',{position:{x:20,y:20}});}catch(_unused){}// eslint-disable-line no-empty\nawait asyncSleep(1000);const existing=Boolean(await this.app.windows().find(window=>window.url().includes('removeServer')));existing.should.be.false;",
              "err": {},
              "uuid": "602fdf09-e4fd-453d-a862-59b0e882e1c7",
              "parentUUID": "5993d3d9-25a8-41b3-b238-89742cc2bd6c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f1cbd7bd-03c7-4d8d-b4e4-dd54b9c85326",
            "2bd76921-4bf9-4416-b68b-b04b8db4dd77",
            "055591d0-3b8a-428a-b720-c3c7dfc0fc62",
            "602fdf09-e4fd-453d-a862-59b0e882e1c7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4232,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "954c2fd2-40c3-4480-8552-b5e33ef2cff8",
          "title": "Settings",
          "fullFile": "G:\\Workspace\\mattermost\\desktop\\dist\\tests\\e2e_bundle.js",
          "file": "\\dist\\tests\\e2e_bundle.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Settings\"",
              "fullTitle": "Settings \"before each\" hook in \"Settings\"",
              "timedOut": false,
              "duration": 3603,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "env.createTestUserDataDir();env.cleanTestConfig();fs.writeFileSync(env.configFilePath,JSON.stringify(config));await asyncSleep(1000);this.app=await env.getApp();",
              "err": {},
              "uuid": "87c22ccc-a6bd-4a2a-b36c-0261877f71ba",
              "parentUUID": "954c2fd2-40c3-4480-8552-b5e33ef2cff8",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Settings\"",
              "fullTitle": "Settings \"after each\" hook in \"Settings\"",
              "timedOut": false,
              "duration": 8349,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if(this.app){await this.app.close();}await env.clearElectronInstances();",
              "err": {},
              "uuid": "877414ab-09e7-47ff-b54a-b2fe25fdd1db",
              "parentUUID": "954c2fd2-40c3-4480-8552-b5e33ef2cff8",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "1dcbd9b1-0714-422c-92cf-d9dd77cc5d59",
              "title": "Options",
              "fullFile": "G:\\Workspace\\mattermost\\desktop\\dist\\tests\\e2e_bundle.js",
              "file": "\\dist\\tests\\e2e_bundle.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "b0f0ec9b-0abe-478f-a8e0-6e0266e5b36a",
                  "title": "Start app on login",
                  "fullFile": "G:\\Workspace\\mattermost\\desktop\\dist\\tests\\e2e_bundle.js",
                  "file": "\\dist\\tests\\e2e_bundle.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "MM-T4392 should appear on win32 or linux",
                      "fullTitle": "Settings Options Start app on login MM-T4392 should appear on win32 or linux",
                      "timedOut": false,
                      "duration": 342,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const expected=process.platform==='win32'||process.platform==='linux';this.app.evaluate(({ipcMain},showWindow)=>{ipcMain.emit(showWindow);},SHOW_SETTINGS_WINDOW);const settingsWindow=await this.app.waitForEvent('window',{predicate:window=>window.url().includes('settings')});await settingsWindow.waitForSelector('.settingsPage.container');await settingsWindow.waitForSelector('#inputAutoStart',{state:expected?'attached':'detached'});const existing=await settingsWindow.isVisible('#inputAutoStart');existing.should.equal(expected);",
                      "err": {},
                      "uuid": "9df3677a-73b2-4922-9486-5ba81b791e1d",
                      "parentUUID": "b0f0ec9b-0abe-478f-a8e0-6e0266e5b36a",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "9df3677a-73b2-4922-9486-5ba81b791e1d"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 342,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 30000
                },
                {
                  "uuid": "0cf99809-e5cd-4795-8259-cb344decec3d",
                  "title": "Show icon in menu bar / notification area",
                  "fullFile": "G:\\Workspace\\mattermost\\desktop\\dist\\tests\\e2e_bundle.js",
                  "file": "\\dist\\tests\\e2e_bundle.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "MM-T4393_1 should appear on darwin or linux",
                      "fullTitle": "Settings Options Show icon in menu bar / notification area MM-T4393_1 should appear on darwin or linux",
                      "timedOut": false,
                      "duration": 324,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const expected=process.platform==='darwin'||process.platform==='linux';this.app.evaluate(({ipcMain},showWindow)=>{ipcMain.emit(showWindow);},SHOW_SETTINGS_WINDOW);const settingsWindow=await this.app.waitForEvent('window',{predicate:window=>window.url().includes('settings')});await settingsWindow.waitForSelector('.settingsPage.container');await settingsWindow.waitForSelector('#inputShowTrayIcon',{state:expected?'attached':'detached'});const existing=await settingsWindow.isVisible('#inputShowTrayIcon');existing.should.equal(expected);",
                      "err": {},
                      "uuid": "a62eaf47-aecd-42b5-a24e-87d9acea150d",
                      "parentUUID": "0cf99809-e5cd-4795-8259-cb344decec3d",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [
                    {
                      "uuid": "07972dfe-5ec0-43e9-8982-c3f77d4990cd",
                      "title": "MM-T4393_2 Save tray icon setting on mac",
                      "fullFile": "G:\\Workspace\\mattermost\\desktop\\dist\\tests\\e2e_bundle.js",
                      "file": "\\dist\\tests\\e2e_bundle.js",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "should be saved when it's selected",
                          "fullTitle": "Settings Options Show icon in menu bar / notification area MM-T4393_2 Save tray icon setting on mac should be saved when it's selected",
                          "timedOut": false,
                          "duration": 0,
                          "state": "pending",
                          "speed": null,
                          "pass": false,
                          "fail": false,
                          "pending": true,
                          "context": null,
                          "code": "",
                          "err": {},
                          "uuid": "4115fa74-cf8b-4e11-aee5-117a2ed49419",
                          "parentUUID": "07972dfe-5ec0-43e9-8982-c3f77d4990cd",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [],
                      "failures": [],
                      "pending": [
                        "4115fa74-cf8b-4e11-aee5-117a2ed49419"
                      ],
                      "skipped": [],
                      "duration": 0,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 30000
                    },
                    {
                      "uuid": "f739c5ab-4704-4fdc-9b6d-d17b4417720a",
                      "title": "MM-T4393_3 Save tray icon theme on linux",
                      "fullFile": "G:\\Workspace\\mattermost\\desktop\\dist\\tests\\e2e_bundle.js",
                      "file": "\\dist\\tests\\e2e_bundle.js",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "should be saved when it's selected",
                          "fullTitle": "Settings Options Show icon in menu bar / notification area MM-T4393_3 Save tray icon theme on linux should be saved when it's selected",
                          "timedOut": false,
                          "duration": 0,
                          "state": "pending",
                          "speed": null,
                          "pass": false,
                          "fail": false,
                          "pending": true,
                          "context": null,
                          "code": "",
                          "err": {},
                          "uuid": "7393d639-2bf3-4269-bc5d-5df29c424452",
                          "parentUUID": "f739c5ab-4704-4fdc-9b6d-d17b4417720a",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [],
                      "failures": [],
                      "pending": [
                        "7393d639-2bf3-4269-bc5d-5df29c424452"
                      ],
                      "skipped": [],
                      "duration": 0,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 30000
                    }
                  ],
                  "passes": [
                    "a62eaf47-aecd-42b5-a24e-87d9acea150d"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 324,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 30000
                },
                {
                  "uuid": "2743abf6-0cfa-49cf-a223-04fa9273ce73",
                  "title": "Leave app running in notification area when application window is closed",
                  "fullFile": "G:\\Workspace\\mattermost\\desktop\\dist\\tests\\e2e_bundle.js",
                  "file": "\\dist\\tests\\e2e_bundle.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "MM-T4394 should appear on linux and win32",
                      "fullTitle": "Settings Options Leave app running in notification area when application window is closed MM-T4394 should appear on linux and win32",
                      "timedOut": false,
                      "duration": 333,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const expected=process.platform==='linux'||process.platform==='win32';this.app.evaluate(({ipcMain},showWindow)=>{ipcMain.emit(showWindow);},SHOW_SETTINGS_WINDOW);const settingsWindow=await this.app.waitForEvent('window',{predicate:window=>window.url().includes('settings')});await settingsWindow.waitForSelector('.settingsPage.container');const existing=await settingsWindow.isVisible('#inputMinimizeToTray');existing.should.equal(expected);",
                      "err": {},
                      "uuid": "d992e9b1-7169-4184-b8b8-225b0f3a50b6",
                      "parentUUID": "2743abf6-0cfa-49cf-a223-04fa9273ce73",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "d992e9b1-7169-4184-b8b8-225b0f3a50b6"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 333,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 30000
                },
                {
                  "uuid": "3c521876-fabf-4543-9d7c-d97ee85002eb",
                  "title": "Flash app window and taskbar icon when a new message is received",
                  "fullFile": "G:\\Workspace\\mattermost\\desktop\\dist\\tests\\e2e_bundle.js",
                  "file": "\\dist\\tests\\e2e_bundle.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "MM-T4395 should appear on win32 and linux",
                      "fullTitle": "Settings Options Flash app window and taskbar icon when a new message is received MM-T4395 should appear on win32 and linux",
                      "timedOut": false,
                      "duration": 333,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const expected=process.platform==='win32'||process.platform==='linux';this.app.evaluate(({ipcMain},showWindow)=>{ipcMain.emit(showWindow);},SHOW_SETTINGS_WINDOW);const settingsWindow=await this.app.waitForEvent('window',{predicate:window=>window.url().includes('settings')});await settingsWindow.waitForSelector('.settingsPage.container');const existing=await settingsWindow.isVisible('#inputflashWindow');existing.should.equal(expected);",
                      "err": {},
                      "uuid": "ddc41b02-dddb-4052-b21b-6e7c056b2e2f",
                      "parentUUID": "3c521876-fabf-4543-9d7c-d97ee85002eb",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "ddc41b02-dddb-4052-b21b-6e7c056b2e2f"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 333,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 30000
                },
                {
                  "uuid": "5a672a04-2349-4ae4-8e61-b72e51e54c83",
                  "title": "Show red badge on taskbar icon to indicate unread messages",
                  "fullFile": "G:\\Workspace\\mattermost\\desktop\\dist\\tests\\e2e_bundle.js",
                  "file": "\\dist\\tests\\e2e_bundle.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "MM-T4396 should appear on darwin or win32",
                      "fullTitle": "Settings Options Show red badge on taskbar icon to indicate unread messages MM-T4396 should appear on darwin or win32",
                      "timedOut": false,
                      "duration": 343,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const expected=process.platform==='darwin'||process.platform==='win32';this.app.evaluate(({ipcMain},showWindow)=>{ipcMain.emit(showWindow);},SHOW_SETTINGS_WINDOW);const settingsWindow=await this.app.waitForEvent('window',{predicate:window=>window.url().includes('settings')});await settingsWindow.waitForSelector('.settingsPage.container');const existing=await settingsWindow.isVisible('#inputShowUnreadBadge');existing.should.equal(expected);",
                      "err": {},
                      "uuid": "c100792f-e847-440f-9dc6-7598b08499e5",
                      "parentUUID": "5a672a04-2349-4ae4-8e61-b72e51e54c83",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "c100792f-e847-440f-9dc6-7598b08499e5"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 343,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 30000
                },
                {
                  "uuid": "687c175b-ac39-4090-a565-c03c1c7c86e9",
                  "title": "Check spelling",
                  "fullFile": "G:\\Workspace\\mattermost\\desktop\\dist\\tests\\e2e_bundle.js",
                  "file": "\\dist\\tests\\e2e_bundle.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "MM-T4397 should appear and be selectable",
                      "fullTitle": "Settings Options Check spelling MM-T4397 should appear and be selectable",
                      "timedOut": false,
                      "duration": 913,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "this.app.evaluate(({ipcMain},showWindow)=>{ipcMain.emit(showWindow);},SHOW_SETTINGS_WINDOW);const settingsWindow=await this.app.waitForEvent('window',{predicate:window=>window.url().includes('settings')});await settingsWindow.waitForSelector('.settingsPage.container');const existing=await settingsWindow.isVisible('#inputSpellChecker');existing.should.equal(true);const selected=await settingsWindow.isChecked('#inputSpellChecker');selected.should.equal(true);await settingsWindow.click('#inputSpellChecker');await settingsWindow.waitForSelector('.appOptionsSaveIndicator :text(\"Saving...\")');await settingsWindow.waitForSelector('.appOptionsSaveIndicator :text(\"Saved\")');const config1=JSON.parse(fs.readFileSync(env.configFilePath,'utf-8'));config1.useSpellChecker.should.equal(false);",
                      "err": {},
                      "uuid": "27ca4cbd-6033-43f6-89bf-f308c3b1644f",
                      "parentUUID": "687c175b-ac39-4090-a565-c03c1c7c86e9",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "27ca4cbd-6033-43f6-89bf-f308c3b1644f"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 913,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 30000
                },
                {
                  "uuid": "19fe2e4b-b010-4a62-90eb-a7cf991e2937",
                  "title": "Enable GPU hardware acceleration",
                  "fullFile": "G:\\Workspace\\mattermost\\desktop\\dist\\tests\\e2e_bundle.js",
                  "file": "\\dist\\tests\\e2e_bundle.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "MM-T4398 should save selected option",
                      "fullTitle": "Settings Options Enable GPU hardware acceleration MM-T4398 should save selected option",
                      "timedOut": false,
                      "duration": 1494,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const ID_INPUT_ENABLE_HARDWARE_ACCELERATION='#inputEnableHardwareAcceleration';this.app.evaluate(({ipcMain},showWindow)=>{ipcMain.emit(showWindow);},SHOW_SETTINGS_WINDOW);const settingsWindow=await this.app.waitForEvent('window',{predicate:window=>window.url().includes('settings')});await settingsWindow.waitForSelector('.settingsPage.container');const selected=await settingsWindow.isChecked(ID_INPUT_ENABLE_HARDWARE_ACCELERATION);selected.should.equal(true);// default is true\nawait settingsWindow.click(ID_INPUT_ENABLE_HARDWARE_ACCELERATION);await settingsWindow.waitForSelector('.appOptionsSaveIndicator :text(\"Saving...\")');await settingsWindow.waitForSelector('.appOptionsSaveIndicator :text(\"Saved\")');const config0=JSON.parse(fs.readFileSync(env.configFilePath,'utf-8'));config0.enableHardwareAcceleration.should.equal(false);await settingsWindow.click(ID_INPUT_ENABLE_HARDWARE_ACCELERATION);await settingsWindow.waitForSelector('.appOptionsSaveIndicator :text(\"Saving...\")');await settingsWindow.waitForSelector('.appOptionsSaveIndicator :text(\"Saved\")');const config1=JSON.parse(fs.readFileSync(env.configFilePath,'utf-8'));config1.enableHardwareAcceleration.should.equal(true);",
                      "err": {},
                      "uuid": "3a90c89f-880a-4bf9-b64b-9d43375db5eb",
                      "parentUUID": "19fe2e4b-b010-4a62-90eb-a7cf991e2937",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "3a90c89f-880a-4bf9-b64b-9d43375db5eb"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1494,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 30000
                },
                {
                  "uuid": "066a24f7-5898-4c07-bddd-cb3e1fe3b9b4",
                  "title": "Enable automatic check for updates",
                  "fullFile": "G:\\Workspace\\mattermost\\desktop\\dist\\tests\\e2e_bundle.js",
                  "file": "\\dist\\tests\\e2e_bundle.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "MM-T4549 should save selected option",
                      "fullTitle": "Settings Options Enable automatic check for updates MM-T4549 should save selected option",
                      "timedOut": true,
                      "duration": 30001,
                      "state": "failed",
                      "speed": null,
                      "pass": false,
                      "fail": true,
                      "pending": false,
                      "context": null,
                      "code": "const ID_INPUT_ENABLE_AUTO_UPDATES='#inputAutoCheckForUpdates';this.app.evaluate(({ipcMain},showWindow)=>{ipcMain.emit(showWindow);},SHOW_SETTINGS_WINDOW);const settingsWindow=await this.app.waitForEvent('window',{predicate:window=>window.url().includes('settings')});await settingsWindow.waitForSelector('.settingsPage.container');const selected=await settingsWindow.isChecked(ID_INPUT_ENABLE_AUTO_UPDATES);selected.should.equal(true);// default is true\nawait settingsWindow.click(ID_INPUT_ENABLE_AUTO_UPDATES);await settingsWindow.waitForSelector('.updatesSaveIndicator :text(\"Saving...\")');await settingsWindow.waitForSelector('.updatesSaveIndicator :text(\"Saved\")');const config0=JSON.parse(fs.readFileSync(env.configFilePath,'utf-8'));config0.autoCheckForUpdates.should.equal(false);await settingsWindow.click(ID_INPUT_ENABLE_AUTO_UPDATES);await settingsWindow.waitForSelector('.updatesSaveIndicator :text(\"Saving...\")');await settingsWindow.waitForSelector('.updatesSaveIndicator :text(\"Saved\")');const config1=JSON.parse(fs.readFileSync(env.configFilePath,'utf-8'));config1.autoCheckForUpdates.should.equal(true);",
                      "err": {
                        "message": "Error: Timeout of 30000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (G:\\Workspace\\mattermost\\desktop\\dist\\tests\\e2e_bundle.js)",
                        "estack": "Error: Timeout of 30000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (G:\\Workspace\\mattermost\\desktop\\dist\\tests\\e2e_bundle.js)\n    at listOnTimeout (node:internal/timers:559:17)\n    at processTimers (node:internal/timers:502:7)",
                        "diff": null
                      },
                      "uuid": "b1120f4f-87c3-4f3c-81cd-cf10574563fb",
                      "parentUUID": "066a24f7-5898-4c07-bddd-cb3e1fe3b9b4",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [],
                  "failures": [
                    "b1120f4f-87c3-4f3c-81cd-cf10574563fb"
                  ],
                  "pending": [],
                  "skipped": [],
                  "duration": 30001,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 30000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 30000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "d3cf9a5b-2096-4b0a-b936-69229811031d",
          "title": "settings/keyboard_shortcuts",
          "fullFile": "G:\\Workspace\\mattermost\\desktop\\dist\\tests\\e2e_bundle.js",
          "file": "\\dist\\tests\\e2e_bundle.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"settings/keyboard_shortcuts\"",
              "fullTitle": "settings/keyboard_shortcuts \"before each\" hook in \"settings/keyboard_shortcuts\"",
              "timedOut": false,
              "duration": 3690,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "env.createTestUserDataDir();env.cleanTestConfig();fs.writeFileSync(env.configFilePath,JSON.stringify(config));await asyncSleep(1000);this.app=await env.getApp();",
              "err": {},
              "uuid": "5518db0d-c2eb-4077-894d-722be48bd3ee",
              "parentUUID": "d3cf9a5b-2096-4b0a-b936-69229811031d",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"settings/keyboard_shortcuts\"",
              "fullTitle": "settings/keyboard_shortcuts \"after each\" hook in \"settings/keyboard_shortcuts\"",
              "timedOut": false,
              "duration": 7873,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if(this.app){await this.app.close();}await env.clearElectronInstances();",
              "err": {},
              "uuid": "eedce00b-f952-495c-ad73-bcf22459f57d",
              "parentUUID": "d3cf9a5b-2096-4b0a-b936-69229811031d",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "6800cc95-cc40-4ca0-b71f-05e918fa421a",
              "title": "MM-T1288 Manipulating Text",
              "fullFile": "G:\\Workspace\\mattermost\\desktop\\dist\\tests\\e2e_bundle.js",
              "file": "\\dist\\tests\\e2e_bundle.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"MM-T1288 Manipulating Text\"",
                  "fullTitle": "settings/keyboard_shortcuts MM-T1288 Manipulating Text \"before each\" hook in \"MM-T1288 Manipulating Text\"",
                  "timedOut": false,
                  "duration": 434,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "this.app.evaluate(({ipcMain},showWindow)=>{ipcMain.emit(showWindow);},SHOW_SETTINGS_WINDOW);settingsWindow=await this.app.waitForEvent('window',{predicate:window=>window.url().includes('settings')});await settingsWindow.waitForSelector('.settingsPage.container');const textbox=await settingsWindow.waitForSelector('#inputSpellCheckerLocalesDropdown');await textbox.scrollIntoViewIfNeeded();await textbox.type('mattermost');",
                  "err": {},
                  "uuid": "16618033-290c-4006-b3be-cfc437a6eee3",
                  "parentUUID": "6800cc95-cc40-4ca0-b71f-05e918fa421a",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "MM-T1288_1 should be able to select all in the settings window",
                  "fullTitle": "settings/keyboard_shortcuts MM-T1288 Manipulating Text MM-T1288_1 should be able to select all in the settings window",
                  "timedOut": false,
                  "duration": 444,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await settingsWindow.click('#inputSpellCheckerLocalesDropdown');robot.keyTap('a',[process.platform==='darwin'?'command':'control']);const selectedText=await settingsWindow.evaluate(()=>{const box=document.querySelectorAll('#inputSpellCheckerLocalesDropdown')[0];return box.value.substring(box.selectionStart,box.selectionEnd);});selectedText.should.equal('mattermost');",
                  "err": {},
                  "uuid": "acc62df3-5a2c-4bf4-acb6-9871bd0c44f6",
                  "parentUUID": "6800cc95-cc40-4ca0-b71f-05e918fa421a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "MM-T1288_2 should be able to cut and paste in the settings window",
                  "fullTitle": "settings/keyboard_shortcuts MM-T1288 Manipulating Text MM-T1288_2 should be able to cut and paste in the settings window",
                  "timedOut": false,
                  "duration": 580,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const textbox=await settingsWindow.waitForSelector('#inputSpellCheckerLocalesDropdown');await textbox.selectText({force:true});robot.keyTap('x',[process.platform==='darwin'?'command':'control']);let textValue=await textbox.getAttribute('value');textValue.should.equal('');await textbox.focus();robot.keyTap('v',[process.platform==='darwin'?'command':'control']);textValue=await textbox.getAttribute('value');textValue.should.equal('mattermost');",
                  "err": {},
                  "uuid": "d2bfa625-a245-469f-8b6d-95d05633ce57",
                  "parentUUID": "6800cc95-cc40-4ca0-b71f-05e918fa421a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "MM-T1288_3 should be able to copy and paste in the settings window",
                  "fullTitle": "settings/keyboard_shortcuts MM-T1288 Manipulating Text MM-T1288_3 should be able to copy and paste in the settings window",
                  "timedOut": false,
                  "duration": 579,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const textbox=await settingsWindow.waitForSelector('#inputSpellCheckerLocalesDropdown');await textbox.selectText({force:true});robot.keyTap('c',[process.platform==='darwin'?'command':'control']);await textbox.focus();await textbox.type('other-text');robot.keyTap('v',[process.platform==='darwin'?'command':'control']);const textValue=await textbox.getAttribute('value');textValue.should.equal('other-textmattermost');",
                  "err": {},
                  "uuid": "ef8de73d-4e24-4082-8c70-eb8abc659f7d",
                  "parentUUID": "6800cc95-cc40-4ca0-b71f-05e918fa421a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "acc62df3-5a2c-4bf4-acb6-9871bd0c44f6",
                "d2bfa625-a245-469f-8b6d-95d05633ce57",
                "ef8de73d-4e24-4082-8c70-eb8abc659f7d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1603,
              "root": false,
              "rootEmpty": false,
              "_timeout": 30000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "ed22670b-c37b-4eee-8d69-b116863f1e3d",
          "title": "startup/app",
          "fullFile": "G:\\Workspace\\mattermost\\desktop\\dist\\tests\\e2e_bundle.js",
          "file": "\\dist\\tests\\e2e_bundle.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"startup/app\"",
              "fullTitle": "startup/app \"before each\" hook in \"startup/app\"",
              "timedOut": false,
              "duration": 2504,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "env.createTestUserDataDir();env.cleanTestConfig();this.app=await env.getApp();",
              "err": {},
              "uuid": "cd233b42-e4ef-4288-9997-5e4ae97bc5db",
              "parentUUID": "ed22670b-c37b-4eee-8d69-b116863f1e3d",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"startup/app\"",
              "fullTitle": "startup/app \"after each\" hook in \"startup/app\"",
              "timedOut": false,
              "duration": 7957,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if(this.app){await this.app.close();}await env.clearElectronInstances();",
              "err": {},
              "uuid": "4005706b-1623-497f-91a0-d8d2a1d2793f",
              "parentUUID": "ed22670b-c37b-4eee-8d69-b116863f1e3d",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "MM-T4399_1 should show the new server modal when no servers exist",
              "fullTitle": "startup/app MM-T4399_1 should show the new server modal when no servers exist",
              "timedOut": false,
              "duration": 24,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const newServerModal=this.app.windows().find(window=>window.url().includes('newServer'));const modalTitle=await newServerModal.innerText('#newServerModal .modal-title');modalTitle.should.equal('Add Server');",
              "err": {},
              "uuid": "0605277c-cb5c-4747-82c6-30130422fe00",
              "parentUUID": "ed22670b-c37b-4eee-8d69-b116863f1e3d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MM-T4419 should not allow the user to close the new server modal when no servers exist",
              "fullTitle": "startup/app MM-T4419 should not allow the user to close the new server modal when no servers exist",
              "timedOut": false,
              "duration": 223,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const newServerModal=this.app.windows().find(window=>window.url().includes('newServer'));const existing=await newServerModal.isVisible('#cancelNewServerModal');existing.should.be.false;robot.keyTap('escape');const existingModal=this.app.windows().find(window=>window.url().includes('newServer'));existingModal.should.not.be.null;",
              "err": {},
              "uuid": "03732314-d499-4459-9f6f-6a818972ef56",
              "parentUUID": "ed22670b-c37b-4eee-8d69-b116863f1e3d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MM-T4399_2 should show no servers configured in dropdown when no servers exist",
              "fullTitle": "startup/app MM-T4399_2 should show no servers configured in dropdown when no servers exist",
              "timedOut": false,
              "duration": 24,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const mainWindow=this.app.windows().find(window=>window.url().includes('index'));const dropdownButtonText=await mainWindow.innerText('.TeamDropdownButton');dropdownButtonText.should.equal('No servers configured');",
              "err": {},
              "uuid": "43eb4a02-0586-48b9-91c8-aff071a3cb6c",
              "parentUUID": "ed22670b-c37b-4eee-8d69-b116863f1e3d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MM-T4400 should be stopped when the app instance already exists",
              "fullTitle": "startup/app MM-T4400 should be stopped when the app instance already exists",
              "timedOut": false,
              "duration": 3001,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const secondApp=env.getApp();// In the correct case, 'start().then' is not called.\n// So need to use setTimeout in order to finish this test.\nconst timer=setTimeout(()=>{done();},3000);secondApp.then(()=>{clearTimeout(timer);return secondApp.close();}).then(()=>{done(new Error('Second app instance exists'));});",
              "err": {},
              "uuid": "98e007f2-5631-4825-aea2-208f6d18aca8",
              "parentUUID": "ed22670b-c37b-4eee-8d69-b116863f1e3d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0605277c-cb5c-4747-82c6-30130422fe00",
            "03732314-d499-4459-9f6f-6a818972ef56",
            "43eb4a02-0586-48b9-91c8-aff071a3cb6c",
            "98e007f2-5631-4825-aea2-208f6d18aca8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3272,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "44239130-eb18-4e86-bbd6-34eaaa3f127e",
          "title": "config",
          "fullFile": "G:\\Workspace\\mattermost\\desktop\\dist\\tests\\e2e_bundle.js",
          "file": "\\dist\\tests\\e2e_bundle.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"config\"",
              "fullTitle": "config \"before each\" hook in \"config\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "env.createTestUserDataDir();env.cleanTestConfig();",
              "err": {},
              "uuid": "2b6f4f7a-5c42-40a8-ac8a-829c1226cebb",
              "parentUUID": "44239130-eb18-4e86-bbd6-34eaaa3f127e",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"config\"",
              "fullTitle": "config \"after each\" hook in \"config\"",
              "timedOut": false,
              "duration": 7729,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if(this.app){try{await this.app.close();// eslint-disable-next-line no-empty\n}catch(err){}}await env.clearElectronInstances();",
              "err": {},
              "uuid": "ae4d940a-7d21-40ba-ab05-17a297761031",
              "parentUUID": "44239130-eb18-4e86-bbd6-34eaaa3f127e",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "MM-T4402 should upgrade v0 config file",
              "fullTitle": "config MM-T4402 should upgrade v0 config file",
              "timedOut": false,
              "duration": 2726,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const Config=__webpack_require__(/*! ../../../src/common/config */\"./src/common/config/index.ts\").Config;const newConfig=new Config(env.configFilePath);const oldConfig={url:env.exampleURL};fs.writeFileSync(env.configFilePath,JSON.stringify(oldConfig));this.app=await env.getApp();const mainWindow=this.app.windows().find(window=>window.url().includes('index'));const dropdownButtonText=await mainWindow.innerText('.TeamDropdownButton:has-text(\"Primary team\")');dropdownButtonText.should.equal('Primary team');const str=fs.readFileSync(env.configFilePath,'utf8');const upgradedConfig=JSON.parse(str);upgradedConfig.version.should.equal(newConfig.defaultData.version);await this.app.close();",
              "err": {},
              "uuid": "771af4d5-df5d-47bd-a1aa-b12334fdc2da",
              "parentUUID": "44239130-eb18-4e86-bbd6-34eaaa3f127e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "36028d54-01d6-4a47-92c9-5540f5a44036",
              "title": "MM-T4401 should show servers in dropdown when there is config file",
              "fullFile": "G:\\Workspace\\mattermost\\desktop\\dist\\tests\\e2e_bundle.js",
              "file": "\\dist\\tests\\e2e_bundle.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"MM-T4401 should show servers in dropdown when there is config file\"",
                  "fullTitle": "config MM-T4401 should show servers in dropdown when there is config file \"before each\" hook in \"MM-T4401 should show servers in dropdown when there is config file\"",
                  "timedOut": false,
                  "duration": 2636,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fs.writeFileSync(env.configFilePath,JSON.stringify(config));this.app=await env.getApp();",
                  "err": {},
                  "uuid": "06817b88-3276-4b77-af34-4396cdeaf978",
                  "parentUUID": "36028d54-01d6-4a47-92c9-5540f5a44036",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after each\" hook in \"MM-T4401 should show servers in dropdown when there is config file\"",
                  "fullTitle": "config MM-T4401 should show servers in dropdown when there is config file \"after each\" hook in \"MM-T4401 should show servers in dropdown when there is config file\"",
                  "timedOut": false,
                  "duration": 133,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "if(this.app){try{await this.app.close();// eslint-disable-next-line no-empty\n}catch(err){}}",
                  "err": {},
                  "uuid": "5becc268-cff6-46b4-8171-c3709839d9cf",
                  "parentUUID": "36028d54-01d6-4a47-92c9-5540f5a44036",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "MM-T4401_1 should show correct server in the dropdown button",
                  "fullTitle": "config MM-T4401 should show servers in dropdown when there is config file MM-T4401_1 should show correct server in the dropdown button",
                  "timedOut": false,
                  "duration": 20,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const mainWindow=this.app.windows().find(window=>window.url().includes('index'));const dropdownButtonText=await mainWindow.innerText('.TeamDropdownButton');dropdownButtonText.should.equal('example');",
                  "err": {},
                  "uuid": "981131ac-b1a8-44f2-a223-61052dee80da",
                  "parentUUID": "36028d54-01d6-4a47-92c9-5540f5a44036",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "MM-T4401_2 should set src of browser view from config file",
                  "fullTitle": "config MM-T4401 should show servers in dropdown when there is config file MM-T4401_2 should set src of browser view from config file",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const firstServer=this.app.windows().find(window=>window.url()===config.teams[0].url);const secondServer=this.app.windows().find(window=>window.url()===config.teams[1].url);firstServer.should.not.be.null;secondServer.should.not.be.null;",
                  "err": {},
                  "uuid": "d21f0868-d1ab-49eb-b31b-97c87ef5c793",
                  "parentUUID": "36028d54-01d6-4a47-92c9-5540f5a44036",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "981131ac-b1a8-44f2-a223-61052dee80da",
                "d21f0868-d1ab-49eb-b31b-97c87ef5c793"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 21,
              "root": false,
              "rootEmpty": false,
              "_timeout": 30000
            }
          ],
          "passes": [
            "771af4d5-df5d-47bd-a1aa-b12334fdc2da"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2726,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "09da7eb0-6cec-4e48-943c-9d91ac226850",
          "title": "window",
          "fullFile": "G:\\Workspace\\mattermost\\desktop\\dist\\tests\\e2e_bundle.js",
          "file": "\\dist\\tests\\e2e_bundle.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"window\"",
              "fullTitle": "window \"before each\" hook in \"window\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "env.createTestUserDataDir();env.cleanTestConfig();",
              "err": {},
              "uuid": "16b8b42a-3f36-41a0-89fc-451c79e0ad41",
              "parentUUID": "09da7eb0-6cec-4e48-943c-9d91ac226850",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"window\"",
              "fullTitle": "window \"after each\" hook in \"window\"",
              "timedOut": false,
              "duration": 7668,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if(this.app){try{await this.app.close();// eslint-disable-next-line no-empty\n}catch(err){}}await env.clearElectronInstances();",
              "err": {},
              "uuid": "030e574d-7dbf-41ce-b4ec-f1c2946d9b92",
              "parentUUID": "09da7eb0-6cec-4e48-943c-9d91ac226850",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "MM-T4403_1 should restore window bounds",
              "fullTitle": "window MM-T4403_1 should restore window bounds",
              "timedOut": false,
              "duration": 2605,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const expectedBounds={x:100,y:200,width:800,height:400};fs.writeFileSync(env.boundsInfoPath,JSON.stringify(expectedBounds));this.app=await env.getApp();const mainWindow=await this.app.windows().find(window=>window.url().includes('index'));const browserWindow=await this.app.browserWindow(mainWindow);const bounds=await browserWindow.evaluate(window=>window.getContentBounds());bounds.should.deep.equal(expectedBounds);await this.app.close();",
              "err": {},
              "uuid": "bd4c10f1-d25d-4ebf-8972-3377c7064ad4",
              "parentUUID": "09da7eb0-6cec-4e48-943c-9d91ac226850",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MM-T4403_2 should NOT restore window bounds if x is located on outside of viewarea",
              "fullTitle": "window MM-T4403_2 should NOT restore window bounds if x is located on outside of viewarea",
              "timedOut": false,
              "duration": 2559,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fs.writeFileSync(env.boundsInfoPath,JSON.stringify({x:-100000,y:200,width:800,height:400}));this.app=await env.getApp();const mainWindow=await this.app.windows().find(window=>window.url().includes('index'));const browserWindow=await this.app.browserWindow(mainWindow);const bounds=await browserWindow.evaluate(window=>window.getContentBounds());bounds.x.should.satisfy(x=>x>-100000);await this.app.close();",
              "err": {},
              "uuid": "cc7264af-25db-477e-a8a4-f59c08c75d23",
              "parentUUID": "09da7eb0-6cec-4e48-943c-9d91ac226850",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MM-T4403_3 should NOT restore window bounds if y is located on outside of viewarea",
              "fullTitle": "window MM-T4403_3 should NOT restore window bounds if y is located on outside of viewarea",
              "timedOut": false,
              "duration": 2590,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fs.writeFileSync(env.boundsInfoPath,JSON.stringify({x:100,y:200000,width:800,height:400}));this.app=await env.getApp();const mainWindow=await this.app.windows().find(window=>window.url().includes('index'));const browserWindow=await this.app.browserWindow(mainWindow);const bounds=await browserWindow.evaluate(window=>window.getContentBounds());bounds.y.should.satisfy(y=>y<200000);await this.app.close();",
              "err": {},
              "uuid": "cc1e2cc4-d19f-4a90-95e9-4fb3fc2c6cba",
              "parentUUID": "09da7eb0-6cec-4e48-943c-9d91ac226850",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bd4c10f1-d25d-4ebf-8972-3377c7064ad4",
            "cc7264af-25db-477e-a8a4-f59c08c75d23",
            "cc1e2cc4-d19f-4a90-95e9-4fb3fc2c6cba"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7754,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}