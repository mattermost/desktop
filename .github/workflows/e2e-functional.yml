name: Electron Playwright Tests

on:
  workflow_call:
    inputs:
      tag:
        description: "Reference tag of the nightly build"
        required: true
        type: string
  push:
    branches:
      - master
  pull_request:
    types:
        - labeled
  workflow_dispatch:
    inputs:
      version_name:
        type: string
        description: 'Desktop Version name eg: 5.6'
        required: true
      job_name:
        type: choice
        description: 'Job name'
        required: true
        default: 'e2e-linux'
        options:
          - 'e2e-linux'
          - 'e2e-macos'
          - 'e2e-windows'
          - 'All'
      
env:
  AWS_S3_BUCKET: "mattermost-cypress-report"
  BRANCH: ${{ github.ref }}
  BUILD_SUFFIX: 'desktop-pr'
  JIRA_PROJECT_KEY: 'MM'
  MM_TEST_SERVER_URL: ${{ secrets.MM_DESKTOP_E2E_SERVER_URL }}
  MM_TEST_USER_NAME: ${{ secrets.MM_DESKTOP_E2E_USER_NAME }}
  MM_TEST_PASSWORD: ${{ secrets.MM_DESKTOP_E2E_USER_CREDENTIALS }}
  PULL_REQUEST_BASE_URL: "https://github.com/mattermost/desktop/pull/"
  ZEPHYR_ENVIRONMENT_NAME: 'Desktop app'
  ZEPHYR_FOLDER_ID: "3256491"
  TEST_CYCLE_LINK_PREFIX: ${{ secrets.MM_DESKTOP_E2E_TEST_CYCLE_LINK_PREFIX }}
  AWS_ACCESS_KEY_ID: ${{ secrets.MM_DESKTOP_E2E_AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.MM_DESKTOP_E2E_AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: "us-east-1"
  WEBHOOK_URL: ${{ secrets.MM_DESKTOP_E2E_WEBHOOK_URL }}
  ZEPHYR_API_KEY: ${{ secrets.MM_DESKTOP_E2E_ZEPHYR_API_KEY }}

jobs:
  e2e-linux:
    if: ${{ 
        (
          (inputs.job_name == 'e2e-linux' || 
          inputs.job_name == 'All')
          &&
            github.event_name == 'workflow_dispatch'
        ) || 
        (
            github.event_name == 'push' && github.ref == 'refs/heads/master'
        ) || 
        (
            github.event_name == 'pull_request' && 
            github.event.pull_request.labels && 
            contains(github.event.pull_request.labels.*.name, 'Run Desktop E2E Tests')
        ) ||
          (
              github.event_name == 'schedule' || github.event_name == 'workflow_call'
          )
      }}
    runs-on: ubuntu-latest
    steps:

      - name: ci/checkout-repo
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
      - name: ci/setup-node
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3.6.0
        with:
          node-version-file: "package.json"
          cache: "npm"
          cache-dependency-path: package-lock.json

      - name: Install dependencies
        env:
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 0
        run: |
          wget -qO - https://download.opensuse.org/repositories/Emulators:/Wine:/Debian/xUbuntu_22.04/Release.key | sudo apt-key add -
          wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/download/v4.20.1/yq_linux_amd64 && chmod a+x /usr/local/bin/yq
          sudo apt-get update || true && sudo apt-get install -y ca-certificates libxtst-dev libpng++-dev gcc-aarch64-linux-gnu g++-aarch64-linux-gnu jq icnsutils graphicsmagick tzdata
          npm ci

      - name: Set Environment Variables
        run: |
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            echo "BRANCH=${{ github.event.pull_request.head.ref }}" >> $GITHUB_ENV
            echo "BUILD_SUFFIX=desktop-pr" >> $GITHUB_ENV
            echo "TYPE=PR" >> $GITHUB_ENV

          elif [ "${{ github.event_name }}" == "release" ]; then
            echo "BRANCH=${{ github.ref }}" >> $GITHUB_ENV
            echo "BUILD_SUFFIX=desktop-release" >> $GITHUB_ENV
            echo "TYPE=RELEASE" >> $GITHUB_ENV
            echo "ZEPHYR_ENABLE=true" >> $GITHUB_ENV

          elif [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "BRANCH=${{ github.ref }}" >> $GITHUB_ENV
            echo "BUILD_SUFFIX=desktop-manual-trigger" >> $GITHUB_ENV
            echo "TYPE=MANUAL" >> $GITHUB_ENV

          elif [ "${{ github.event_name }}" == "push" ] && [ "${{ github.ref }}" == "refs/heads/master" ]; then
            echo "BRANCH=${{ github.ref }}" >> $GITHUB_ENV
            echo "TYPE=MASTER" >> $GITHUB_ENV
            echo "BUILD_SUFFIX=desktop-master-push" >> $GITHUB_ENV
            echo "ZEPHYR_ENABLE=true" >> $GITHUB_ENV

          elif [ "${{ github.event_name }}" == "schedule" || "${{ github.event_name }}" == "workflow_call" ]; then
            echo "BRANCH=${{ github.ref }}" >> $GITHUB_ENV
            echo "BUILD_SUFFIX=desktop-nightly" >> $GITHUB_ENV
            echo "TYPE=NIGHTLY" >> $GITHUB_ENV
            echo "ZEPHYR_ENABLE=true" >> $GITHUB_ENV
          fi

      - name: Run Playwright tests (Ubuntu OS)
        run: |
          export DISPLAY=:99
          Xvfb $DISPLAY -screen 0 1024x768x24 > /dev/null 2>&1 &
          npm run test:e2e || true # making job pass even if the tests fail due to flakyness
          npm run test:e2e:send-report

  e2e-macos:
    if: ${{ 
        (
          (inputs.job_name == 'e2e-macos' || 
          inputs.job_name == 'All')
          &&
            github.event_name == 'workflow_dispatch'
        ) || 
        (
            github.event_name == 'push' && github.ref == 'refs/heads/master'
        ) || 
        (
            github.event_name == 'pull_request' && 
            github.event.pull_request.labels && 
            contains(github.event.pull_request.labels.*.name, 'Run Desktop E2E Tests')
        ) ||
         (
          github.event_name == 'schedule' || github.event_name == 'workflow_call'
      )
      }}
    runs-on: macos-13
    steps:
      - name: ci/checkout-repo
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
      - name: ci/setup-node
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3.6.0
        with:
          node-version-file: "package.json"
          cache: "npm"
          cache-dependency-path: package-lock.json
      - name: Cache Electron Headers
        uses: actions/cache@v3
        with:
          path: |
            ~/.electron
            ~/.cache/electron
          key: electron-headers-${{ runner.os }}-${{ hashFiles('**/*.gyp') }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: ci/install-dependencies
        env:
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
        run: |
          jq '.mac.target=["zip"]' electron-builder.json | jq '.mac.gatekeeperAssess=false' > /tmp/electron-builder.json && cp /tmp/electron-builder.json .
          npm ci
          npm install -g node-gyp
          npm i robotjs
          npx electron-rebuild -f -t prod,optional,dev -w robotjs

      - name: Set Environment Variables
        run: |
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            echo "BRANCH=${{ github.event.pull_request.head.ref }}" >> $GITHUB_ENV
            echo "BUILD_SUFFIX=desktop-pr" >> $GITHUB_ENV
            echo "TYPE=PR" >> $GITHUB_ENV

          elif [ "${{ github.event_name }}" == "release" ]; then
            echo "BRANCH=${{ github.ref }}" >> $GITHUB_ENV
            echo "BUILD_SUFFIX=desktop-release" >> $GITHUB_ENV
            echo "TYPE=RELEASE" >> $GITHUB_ENV
            echo "ZEPHYR_ENABLE=true" >> $GITHUB_ENV

          elif [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "BRANCH=${{ github.ref }}" >> $GITHUB_ENV
            echo "BUILD_SUFFIX=desktop-manual-trigger" >> $GITHUB_ENV
            echo "TYPE=MANUAL" >> $GITHUB_ENV

          elif [ "${{ github.event_name }}" == "push" ] && [ "${{ github.ref }}" == "refs/heads/master" ]; then
            echo "BRANCH=${{ github.ref }}" >> $GITHUB_ENV
            echo "TYPE=MASTER" >> $GITHUB_ENV
            echo "BUILD_SUFFIX=desktop-master-push" >> $GITHUB_ENV
            echo "ZEPHYR_ENABLE=true" >> $GITHUB_ENV

          elif [ "${{ github.event_name }}" == "schedule" || "${{ github.event_name }}" == "workflow_call" ]; then
            echo "BRANCH=${{ github.ref }}" >> $GITHUB_ENV
            echo "BUILD_SUFFIX=desktop-nightly" >> $GITHUB_ENV
            echo "TYPE=NIGHTLY" >> $GITHUB_ENV
            echo "ZEPHYR_ENABLE=true" >> $GITHUB_ENV
          fi

      - name: Run Playwright tests (macOS)
        run: |
          cat $GITHUB_ENV
          npm run test:e2e || true # making job pass even if the tests fail due to flakyness
          npm run test:e2e:send-report

  e2e-windows:
    if: ${{ 
        (
          (inputs.job_name == 'e2e-windows' || 
          inputs.job_name == 'All')
          &&
            github.event_name == 'workflow_dispatch'
        ) || 
        (
            github.event_name == 'push' && github.ref == 'refs/heads/master'
        ) || 
        (
            github.event_name == 'pull_request' && 
            github.event.pull_request.labels && 
            contains(github.event.pull_request.labels.*.name, 'Run Desktop E2E Tests')
        ) ||
         (
          github.event_name == 'schedule' || github.event_name == 'workflow_call'
      )
      }}
    runs-on: windows-2022
    steps:
      - name: ci/checkout-repo
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
      - name: ci/setup-node
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3.6.0
        with:
          node-version-file: "package.json"
          cache: "npm"
          cache-dependency-path: package-lock.json

      - name: ci/cache-node-modules
        id: cache-node-modules
        uses: actions/cache@627f0f41f6904a5b1efbaed9f96d9eb58e92e920 # v3.2.4
        with:
          path: node_modules
          key: ${{ runner.os }}-build-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-node-modules
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: ci/install-node-gyp
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        env:
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
        run: |
          choco install yq --version 4.15.1 -y
          npm i -g node-gyp
          node-gyp install
          node-gyp install --devdir="C:\Users\runneradmin\.electron-gyp" --target=$(jq -r .devDependencies.electron package.json) --dist-url="https://electronjs.org/headers"
          node-gyp install --devdir="C:\Users\runneradmin\.electron-gyp" --target=$(jq -r .devDependencies.electron package.json) --dist-url="https://electronjs.org/headers" --arch arm64
          node-gyp install --devdir="C:\Users\runneradmin\.electron-gyp" --target=$(jq -r .devDependencies.electron package.json) --dist-url="https://electronjs.org/headers" --arch ia32
          npm ci --openssl_fips=''

      - name: Set Environment Variables
        shell: bash
        run: |
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            echo "BRANCH=${{ github.event.pull_request.head.ref }}" >> $GITHUB_ENV
            echo "BUILD_SUFFIX=desktop-pr" >> $GITHUB_ENV
            echo "TYPE=PR" >> $GITHUB_ENV

          elif [ "${{ github.event_name }}" == "release" ]; then
            echo "BRANCH=${{ github.ref }}" >> $GITHUB_ENV
            echo "BUILD_SUFFIX=desktop-release" >> $GITHUB_ENV
            echo "TYPE=RELEASE" >> $GITHUB_ENV
            echo "ZEPHYR_ENABLE=true" >> $GITHUB_ENV

          elif [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "BRANCH=${{ github.ref }}" >> $GITHUB_ENV
            echo "BUILD_SUFFIX=desktop-manual-trigger" >> $GITHUB_ENV
            echo "TYPE=MANUAL" >> $GITHUB_ENV
  
          elif [ "${{ github.event_name }}" == "push" ] && [ "${{ github.ref }}" == "refs/heads/master" ]; then
            echo "BRANCH=${{ github.ref }}" >> $GITHUB_ENV
            echo "TYPE=MASTER" >> $GITHUB_ENV
            echo "BUILD_SUFFIX=desktop-master-push" >> $GITHUB_ENV
            echo "ZEPHYR_ENABLE=true" >> $GITHUB_ENV

          elif [ "${{ github.event_name }}" == "schedule" || "${{ github.event_name }}" == "workflow_call" ]; then
            echo "BRANCH=${{ github.ref }}" >> $GITHUB_ENV
            echo "BUILD_SUFFIX=desktop-nightly" >> $GITHUB_ENV
            echo "TYPE=NIGHTLY" >> $GITHUB_ENV
            echo "ZEPHYR_ENABLE=true" >> $GITHUB_ENV
          fi
  
      - name: Run Playwright tests (Windows OS)
        run: |
          cat $GITHUB_ENV
          npm run test:e2e || true
          npm run test:e2e:send-report
        shell: bash

  e2e-remove-label:
    if: ${{ github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'Run Desktop E2E Tests') }}
    needs: [e2e-linux, e2e-macos, e2e-windows]
    runs-on: ubuntu-latest
    steps:
      - name: Remove "Run Desktop E2E Tests" label
        uses: actions-ecosystem/action-remove-labels@v1
        with:
          labels: |
            Run Desktop E2E Tests
