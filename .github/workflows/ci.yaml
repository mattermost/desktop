name: ci
on:
  pull_request:

defaults:
  run:
    shell: bash

env:
  TERM: xterm

jobs:
  build-linux:
    runs-on: ubuntu-22.04
    steps:
      - name: ci/checkout-repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: ci/setup-node
        uses: actions/setup-node@1d0ff469b7ec7b3cb9d8673fde0c81c44821de2a # v4.2.0
        with:
          node-version-file: "package.json"
          cache: "npm"
          cache-dependency-path: package-lock.json
      - name: ci/install-dependencies
        env:
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
        run: |
          wget -qO - https://download.opensuse.org/repositories/Emulators:/Wine:/Debian/xUbuntu_22.04/Release.key | sudo apt-key add -
          wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/download/v4.20.1/yq_linux_amd64 && chmod a+x /usr/local/bin/yq
          sudo apt-get update || true && sudo apt-get install -y ca-certificates libxtst-dev libpng++-dev gcc-aarch64-linux-gnu g++-aarch64-linux-gnu jq icnsutils graphicsmagick tzdata
          npm ci
      - name: ci/test
        uses: ./.github/actions/test
      - name: ci/build
        run: |
          mkdir -p ./build/linux
          npm run package:linux-tar
          bash -x ./scripts/patch_updater_yml.sh
          bash -x ./scripts/cp_artifacts.sh release ./build/linux
      - name: ci/upload-test-results
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
        with:
          name: linux-test-results
          path: test-results.xml
          retention-days: 5
      - name: ci/upload-build
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
        with:
          name: build-linux
          path: ./build/linux
          retention-days: 10 ## No need to keep CI builds more than 10 days

  windows-install-deps:
    runs-on: windows-2022
    steps:
      - name: ci/checkout-repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: ci/setup-node
        uses: actions/setup-node@1d0ff469b7ec7b3cb9d8673fde0c81c44821de2a # v4.2.0
        with:
          node-version-file: "package.json"
          cache: "npm"
          cache-dependency-path: package-lock.json
      - name: ci/cache-node-modules
        id: cache-node-modules
        uses: actions/cache@0c907a75c2c80ebcb7f088228285e798b750cf8f # v4.2.1
        with:
          path: node_modules
          key: ${{ runner.os }}-build-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-node-modules
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: ci/install-dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        env:
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
        run: |
          choco install yq --version 4.15.1 -y
          npm i -g node-gyp
          node-gyp install
          node-gyp install --devdir="C:\Users\runneradmin\.electron-gyp" --target=$(jq -r .devDependencies.electron package.json) --dist-url="https://electronjs.org/headers"
          npm ci --openssl_fips=''

  build-win-no-installer:
    runs-on: windows-2022
    needs:
      - windows-install-deps
    steps:
      - name: ci/checkout-repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: ci/setup-node
        uses: actions/setup-node@1d0ff469b7ec7b3cb9d8673fde0c81c44821de2a # v4.2.0
        with:
          node-version-file: "package.json"
          cache: "npm"
          cache-dependency-path: package-lock.json
      - name: ci/cache-node-modules
        id: cache-node-modules
        uses: actions/cache@0c907a75c2c80ebcb7f088228285e798b750cf8f # v4.2.1
        with:
          path: node_modules
          key: ${{ runner.os }}-build-node-modules-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-node-modules
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: ci/install-node-gyp
        env:
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
        run: |
          choco install yq --version 4.15.1 -y
          npm i -g node-gyp
          node-gyp install
          node-gyp install --devdir="C:\Users\runneradmin\.electron-gyp" --target=$(jq -r .devDependencies.electron package.json) --dist-url="https://electronjs.org/headers"
          node-gyp install --devdir="C:\Users\runneradmin\.electron-gyp" --target=$(jq -r .devDependencies.electron package.json) --dist-url="https://electronjs.org/headers" --arch arm64
      - name: ci/install-dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        env:
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
        run: |
          npm ci --openssl_fips=''
      - name: ci/test
        uses: ./.github/actions/test
      - name: ci/build
        run: |
          mkdir -p ./build/win
          npm run package:windows
          bash -x ./scripts/patch_updater_yml.sh
          bash -x ./scripts/cp_artifacts.sh release ./build/win
      - name: ci/upload-test-results
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
        with:
          name: windows-test-results
          path: test-results.xml
          retention-days: 5
      - name: ci/upload-build
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
        with:
          name: build-windows
          path: ./build/win
          retention-days: 10 ## No need to keep CI builds more than 10 days

  build-mac-no-dmg:
    runs-on: macos-15
    steps:
      - name: ci/checkout-repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: ci/setup-node
        uses: actions/setup-node@1d0ff469b7ec7b3cb9d8673fde0c81c44821de2a # v4.2.0
        with:
          node-version-file: "package.json"
          cache: "npm"
          cache-dependency-path: package-lock.json
      - name: ci/install-dependencies
        env:
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
        run: |
          brew install yq
          jq '.mac.target=["zip"]' electron-builder.json | jq '.mac.gatekeeperAssess=false' > /tmp/electron-builder.json && cp /tmp/electron-builder.json .
          sudo xcode-select -s /Applications/Xcode_16.2.app/Contents/Developer
          npm ci
      - name: ci/test
        uses: ./.github/actions/test
      - name: ci/build
        run: |
          mkdir -p ./build/macos
          npm run package:mac
          bash -x ./scripts/patch_updater_yml.sh
          bash -x ./scripts/cp_artifacts.sh release ./build/macos/
      - name: ci/upload-test-results
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
        with:
          name: macos-test-results
          path: test-results.xml
          retention-days: 5
      - name: ci/upload-build
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
        with:
          name: build-macos
          path: ./build/macos/
          retention-days: 10 ## No need to keep CI builds more than 10 days

  report-test-results:
    if: always()
    needs:
      - build-mac-no-dmg
      - build-win-no-installer
      - build-linux
    runs-on: ubuntu-22.04
    permissions:
      checks: write
      pull-requests: write
    steps:
      - name: ci/download-macos-test-results
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: macos-test-results
          path: macos-test-results
      - name: ci/download-windows-test-results
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: windows-test-results
          path: windows-test-results
      - name: ci/download-linux-test-results
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: linux-test-results
          path: linux-test-results
      - name: ci/publish-results
        uses: EnricoMi/publish-unit-test-result-action@170bf24d20d201b842d7a52403b73ed297e6645b # v2.18.0
        with:
          comment_mode: failures
          compare_to_earlier_commit: false
          junit_files: "**/*.xml"
